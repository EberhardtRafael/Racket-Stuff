#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.7 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 60 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 36 36 140 255 255 255 -1
-1 0 42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 34 139 34 255 255 255 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1 4
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1
          0 898 0 28 3 12 #"#lang racket"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 4 #"posn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 24 #"test-engine/racket-tests"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 85
(4
 #";-------------------------------------------------------------------"
 #"-----------------"
) 0 0 24 29 1 #"\n"
0 0 17 3 56 #";;numero-raizes: numero numero numero booleano -> string"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 99
(5
 #";;obj: Dados tr\303\252s n\303\272meros reais correspondentes aos co"
 #"eficientes de um polin\303\264mio de segundo grau"
) 0 0 24 29 1 #"\n"
0 0 17 3 84
(6
 #";al\303\251m de \"true\" ou \"fals"
 #"e\", a fun\303\247\303\243o calcula o "
 #"n\303\272mero de ra\303\255zes reais distintas"
) 0 0 24 29 1 #"\n"
0 0 17 3 102
(7
 #";(porque um polin\303\264mio de seg"
 #"undo grau SEMPRE TEM DUAS RA\303\215ZES) e retorna, ou uma string em"
 #" portugu\303\252s"
) 0 0 24 29 1 #"\n"
0 0 17 3 95
(8
 #";indicando o valor encontrado ca"
 #"so \"true\" ou uma string em ingl\303\252s indicando o valor encontr"
 #"ado"
) 0 0 24 29 1 #"\n"
0 0 17 3 14 #";caso \"false\"."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Exemplo:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";(numero-raizes"
0 0 17 3 63
(9
 #" 1 -5 4 true) = \"O n\303\272mero "
 #"de ra\303\255zes reais distintas \303\251 dois.\""
) 0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 13 #"numero-raizes"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #" "
0 0 17 3 2 #"-2"
0 0 17 3 1 #" "
0 0 17 3 1 #"4"
0 0 17 3 1 #" "
0 0 17 3 13 #"false) = \"The"
0 0 17 3 1 #" "
0 0 17 3 6 #"number"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 4 #"real"
0 0 17 3 1 #" "
0 0 17 3 8 #"distinct"
0 0 17 3 1 #" "
0 0 17 3 19 #"solutions is zero.\""
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"numero-raizes"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 6 #"lingua"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"valor"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"dois\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"discriminante"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 6 #"lingua"
0 0 24 3 3 #"   "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"     [("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 13 #"discriminante"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 13 #"discriminante"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"valor"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"zero\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"valor"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"um\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 2 #"\"O"
0 0 19 3 8 #" n\303\272mero"
0 0 19 3 1 #" "
0 0 19 3 2 #"de"
0 0 19 3 14 #" ra\303\255zes reais"
0 0 19 3 18 #" distintas \303\251: ~a."
0 0 19 3 3 #"\\n\""
0 0 24 3 1 #" "
0 0 14 3 5 #"valor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ["
0 0 14 3 4 #"else"
0 0 24 3 3 #"   "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 13 #"discriminante"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"valor"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"two"
0 0 19 3 1 #"\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 13 #"discriminante"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"valor"
0 0 24 3 2 #"  "
0 0 19 3 5 #"\"zero"
0 0 19 3 1 #"\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"valor"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"one"
0 0 19 3 1 #"\""
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 6 #"printf"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 3 #"The"
0 0 19 3 1 #" "
0 0 19 3 6 #"number"
0 0 19 3 1 #" "
0 0 19 3 2 #"of"
0 0 19 3 1 #" "
0 0 19 3 4 #"real"
0 0 19 3 1 #" "
0 0 19 3 8 #"distinct"
0 0 19 3 1 #" "
0 0 19 3 9 #"solutions"
0 0 19 3 1 #" "
0 0 19 3 3 #"is:"
0 0 19 3 4 #" ~a."
0 0 19 3 3 #"\\n\""
0 0 24 3 1 #" "
0 0 14 3 5 #"valor"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ]"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  )"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"numero-raizes"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"-5"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 2 #") "
0 0 19 3 49
(10
 #"\"O n\303\272mero de ra\303\255zes re"
 #"ais distintas \303\251: dois.\\n"
) 0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"numero-raizes"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"-4"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 14 3 4 #"true"
0 0 24 3 2 #") "
0 0 19 3 47
#"\"O n\303\272mero de ra\303\255zes reais distintas \303\251: um.\\n"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"numero-raizes"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"-2"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 19 3 1 #"\""
0 0 19 3 47 #"The number of real distinct solutions is: zero."
0 0 19 3 2 #"\\n"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 85 4 0 0 24 29 1 #"\n"
0 0 17 3 37 #";;selecioina-cor: numero inteiro -> \""
0 0 17 3 4 #"cor\""
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 73
(11
 #";;obj: Dado um n\303\272mero, caso este seja menor que 50, a fun\303"
 #"\247\303\243o retorna \""
) 0 0 17 3 7 #"orange\""
0 0 24 29 1 #"\n"
0 0 17 3 54
#";caso o n\303\272mero seja maior ou igual a 50, retorna-se \""
0 0 17 3 5 #"red\"."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Exemplo:"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";(seleciona-cor 50) = \""
0 0 17 3 5 #"red\"."
0 0 24 29 1 #"\n"
0 0 17 3 23 #";(seleciona-cor 10) = \""
0 0 17 3 8 #"orange\"."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"seleciona-cor"
0 0 24 3 1 #" "
0 0 14 3 6 #"numero"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 14 3 6 #"numero"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 19 3 7 #"\"orange"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 17 3 29 #";caso verdadeiro: numero < 50"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 19 3 4 #"\"red"
0 0 19 3 1 #"\""
0 0 24 3 1 #" "
0 0 17 3 24 #";caso falso: numero > 50"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"seleciona-cor"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #") "
0 0 19 3 4 #"\"red"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"seleciona-cor"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 2 #") "
0 0 19 3 4 #"\"red"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"seleciona-cor"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #") "
0 0 19 3 1 #"\""
0 0 19 3 7 #"orange\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 85 4 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";;calcula-proporcao: numero numero -> string"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 100
(12
 #";;obj: Dados dois n\303\272meros rea"
 #"is a e b, calcula-se a prop"
 #"or\303\247\303\243o do primeiro em rela\303\247\303\243o ao segundo"
) 0 0 24 29 1 #"\n"
0 0 17 3 53 #";e escreve-se o resultado arredondado em porcentagem."
0 0 24 29 1 #"\n"
0 0 17 3 28 #";(Caso b = 0, retorna-se -1)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Exemplo:"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";(calcula-proporcao 21 17)= 124%"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";(calcula-proporcao 5 10) = 50%."
0 0 24 29 1 #"\n"
0 0 17 3 33 #";(calcula-proporcao 10 5) = 200%."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"calcula-proporcao"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 5 #"round"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 21 3 3 #"100"
0 0 24 3 7 #"))     "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 2 #"-1"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"calcula-proporcao"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 2 #"50"
0 0 24 3 2 #") "
0 0 17 3 70
(13
 #";Ao menos no meu PC, eu coloco um valor errado aqui e nada \303\251 "
 #"alegado."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"calcula-proporcao"
0 0 24 3 1 #" "
0 0 21 3 2 #"21"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 21 3 2 #"-1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 85 4 0 0 24 29 1 #"\n"
0 0 17 3 46
#";desenha-barra: n\303\272mero -> string + ret\303\242ngulo"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 99
(14
 #";obj: Dado um n\303\272mero n maior que zero, este \303\251 transfor"
 #"mado em string e printado na tela englobado"
) 0 0 24 29 1 #"\n"
0 0 17 3 92
(15
 #";por um ret\303\242ngulo cuja largura apresenta um n\303\272mero de "
 #"pixels corresponde ao valor entrado."
) 0 0 24 29 1 #"\n"
0 0 17 3 29 #";Importante: n < 0 gera erro."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";Exemplo:"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";(desenha-barra 5) = "
0 6           4 17 389
(16
 #"(#(struct:overlay #(struct:translate 0 3.5 #(struct:translate 4.0 11"
 #".5 #(struct:text \"5\" 0 1 \"black\" 15 #f swiss normal normal #f)))"
 #" #(struct:translate 1.5 0 #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 5 0 0 0)"
 #" #(struct:pulled-point 0 0 5 30 0 0) #(struct:pulled-point 0 0 0 30 "
 #"0 0)) 255 \"orange\")))) #(struct:bb 8.0 30.0 30.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 13 #"desenha-barra"
0 0 17 3 1 #" "
0 0 17 3 6 #"50) = "
0 6           4 17 549
(17
 #"(#(struct:overlay #(struct:translate 17.0 3.5 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:translate 4.0 11.5 #(struct:text \"5\" 0 "
 #"1 \"black\" 15 #f swiss normal normal #f))) #(struct:translate 8.0 0"
 #".0 #(struct:translate 4.0 11.5 #(struct:text \"0\" 0 1 \"black\" 15 "
 #"#f swiss normal normal #f))))) #(struct:translate 0 0 #(struct:trans"
 #"late 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(stru"
 #"ct:pulled-point 0 0 50 0 0 0) #(struct:pulled-point 0 0 50 30 0 0) #"
 #"(struct:pulled-point 0 0 0 30 0 0)) 255 \"red\")))) #(struct:bb 50.0"
 #" 30.0 30.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 13 #"desenha-barra"
0 0 17 3 1 #" "
0 0 17 3 6 #"0) = 0"
0 0 24 29 1 #"\n"
0 0 17 3 97
(18
 #";(desenha-barra -1) = \"rectangle: expects a non negative real numbe"
 #"r as first argument, given -1\""
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"desenha-barra"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 24 3 2 #" ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #") "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 2 #" ("
0 0 14 3 13 #"seleciona-cor"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 85 4 0 0 24 29 1 #"\n"
0 0 17 3 75
(19
 #";;visualiza-resultado: string string n\303\272mero n\303\272mero -> "
 #"string + ret\303\242ngulo"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 92
(20
 #";;obj: Dados dois grupos com se"
 #"us respectivos tamanhos, a fun\303\247\303\243o cria um gr\303\241fi"
 #"co de barra"
) 0 0 24 29 1 #"\n"
0 0 17 3 89
(21
 #";horizontal indicando a propor\303\247\303\243o relativa entre os gr"
 #"upos por meio de cores distintas."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Exemplos:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";(visualiza-resultado"
0 0 17 3 28 #" \"grupo1\" \"grupo2\" 60 80) = "
0 6           4 17 5438
(22
 #"(#(struct:overlay #(struct:translate 0 30 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:translate 4.5 9.0 #(struct:text \"O\" 0 1 \"black\" 12 #f swiss n"
 #"ormal normal #f))) #(struct:translate 9.0 0.0 #(struct:translate 1.5"
 #" 9.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss normal normal #f)"
 #")))) #(struct:translate 12.0 0.0 #(struct:translate 1.5 9.0 #(struct"
 #":text \"t\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct"
 #":translate 15.0 0.0 #(struct:translate 3.5 9.0 #(struct:text \"a\" 0"
 #" 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 22"
 #".0 0.0 #(struct:translate 5.0 9.0 #(struct:text \"m\" 0 1 \"black\" "
 #"12 #f swiss normal normal #f))))) #(struct:translate 32.0 0.0 #(stru"
 #"ct:translate 3.5 9.0 #(struct:text \"a\" 0 1 \"black\" 12 #f swiss n"
 #"ormal normal #f))))) #(struct:translate 39.0 0.0 #(struct:translate "
 #"3.5 9.0 #(struct:text \"n\" 0 1 \"black\" 12 #f swiss normal normal "
 #"#f))))) #(struct:translate 46.0 0.0 #(struct:translate 3.5 9.0 #(str"
 #"uct:text \"h\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(str"
 #"uct:translate 53.0 0.0 #(struct:t"
 #"ranslate 3.5 9.0 #(struct:text \"o\" 0 1 \"black\" 12 #f swiss norma"
 #"l normal #f))))) #(struct:translate 60.0 0.0 #(struct:translate 1.5 "
 #"9.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 63.0 0.0 #(struct:translate 3.5 9.0 #(struct:"
 #"text \"d\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:"
 #"translate 70.0 0.0 #(struct:translate 3.5 9.0 #(struct:text \"a\" 0 "
 #"1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 77."
 #"0 0.0 #(struct:translate 1.5 9.0 #(struct:text \" \" 0 1 \"black\" 1"
 #"2 #f swiss normal normal #f))))) #(struct:translate 80.0 0.0 #(struc"
 #"t:translate 3.5 9.0 #(struct:text \"a\" 0 1 \"black\" 12 #f swiss no"
 #"rmal normal #f))))) #(struct:translate 87.0 0.0 #(struct:translate 5"
 #".0 9.0 #(struct:text \"m\" 0 1 \"black\" 12 #f swiss normal normal #"
 #"f))))) #(struct:translate 97.0 0.0 #(struct:translate 3.5 9.0 #(stru"
 #"ct:text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 104.0 0.0 #(struct:t"
 #"ranslate 3.0 9.0 #(struct:text \"s\" 0 1 \"black\" 12 #f swiss norma"
 #"l normal #f))))) #(struct:translate 110.0 0.0 #(struct:translate 1.5"
 #" 9.0 #(struct:text \"t\" 0 1 \"black\" 12 #f swiss normal normal #f)"
 #")))) #(struct:translate 113.0 0.0 #(struct:translate 2.0 9.0 #(struc"
 #"t:text \"r\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struc"
 #"t:translate 117.0 0.0 #(struct:translate 3.5 9.0 #(struct:text \"a\""
 #" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate "
 #"124.0 0.0 #(struct:translate 1.5 9.0 #(struct:text \" \" 0 1 \"black"
 #"\" 12 #f swiss normal normal #f))))) #(struct:translate 127.0 0.0 #("
 #"struct:translate 3.5 9.0 #(struct:text \"\303\251\" 0 1 \"black\" 12"
 #" #f swiss normal normal #f))))) #(struct:translate 134.0 0.0 #(struc"
 #"t:translate 1.5 9.0 #(struct:text \":\" 0 1 \"black\" 12 #f swiss no"
 #"rmal normal #f))))) #(struct:translate 137.0 0.0 #(struct:translate "
 #"1.5 9.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss normal normal "
 #"#f))))) #(struct:translate 140.0 0.0 #(struct:translate 3.5 9.0 #(st"
 #"ruct:text \"1\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 147.0 0.0 #(struct:translate 3.5 9.0 #(struct:text \""
 #"4\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:transla"
 #"te 154.0 0.0 #(struct:translate 3.5 9.0 #(struct:text \"0\" 0 1 \"bl"
 #"ack\" 12 #f swiss normal normal #f))))) #(struct:translate 20 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 13.5 3.5 #(struct:overlay #(struct:translate 0 0 #(struct:transl"
 #"ate 4.0 11.5 #(struct:text \"4\" 0 1 \"black\" 15 #f swiss normal no"
 #"rmal #f))) #(struct:translate 8.0 0.0 #(struct:translate 4.0 11.5 #("
 #"struct:text \"3\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #("
 #"struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 43 0 0 0) #(s"
 #"truct:pulled-point 0 0 43 30 0 0) #(struct:pulled-point 0 0 0 30 0 0"
 #")) 255 \"orange\"))))) #(struct:translate 43 0 #(struct:overlay #(st"
 #"ruct:translate 20.5 3.5 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:translate 4.0 11.5 #(struct:text \"5\" 0 1 \"black\" 15 #f swis"
 #"s normal normal #f))) #(struct:translate 8.0 0.0 #(struct:translate "
 #"4.0 11.5 #(struct:text \"7\" 0 1 \"black\" 15 #f swiss normal normal"
 #" #f))))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 57"
 #" 0 0 0) #(struct:pulled-point 0 0 57 30 0 0) #(struct:pulled-point 0"
 #" 0 0 30 0 0)) 255 \"red\")))))))) #(struct:bb 161.0 48.0 44.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 17 3 31 #";(visualiza-resultado \"grupo1\" "
0 0 17 3 15 #"\"grupo2\" 60 0) "
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 6           4 17 5279
(23
 #"(#(struct:overlay #(struct:translate 0 30 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:translate 4.5 9.0 #(struct:text \"O\""
 #" 0 1 \"black\" 12 #f swiss normal normal #f))) #(struct:translate 9."
 #"0 0.0 #(struct:translate 1.5 9.0 #(struct:text \" \" 0 1 \"black\" 1"
 #"2 #f swiss normal normal #f))))) #(struct:translate 12.0 0.0 #(struc"
 #"t:translate 1.5 9.0 #(struct:text \"t\" 0 1 \"black\" 12 #f swiss no"
 #"rmal normal #f))))) #(struct:translate 15.0 0.0 #(struct:translate 3"
 #".5 9.0 #(struct:text \"a\" 0 1 \"black\" 12 #f swiss normal normal #"
 #"f))))) #(struct:translate 22.0 0.0 #(struct:translate 5.0 9.0 #(stru"
 #"ct:text \"m\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 32.0 0.0 #(struct:translate 3.5 9.0 #(struct:text \"a\""
 #" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate "
 #"39.0 0.0 #(struct:translate 3.5 "
 #"9.0 #(struct:text \"n\" 0 1 \"black\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 46.0 0.0 #(struct:translate 3.5 9.0 #(struct:"
 #"text \"h\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:"
 #"translate 53.0 0.0 #(struct:translate 3.5 9.0 #(struct:text \"o\" 0 "
 #"1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 60."
 #"0 0.0 #(struct:translate 1.5 9.0 #(struct:text \" \" 0 1 \"black\" 1"
 #"2 #f swiss normal normal #f))))) #(struct:translate 63.0 0.0 #(struc"
 #"t:translate 3.5 9.0 #(struct:text \"d\" 0 1 \"black\" 12 #f swiss no"
 #"rmal normal #f))))) #(struct:translate 70.0 0.0 #(struct:translate 3"
 #".5 9.0 #(struct:text \"a\" 0 1 \"black\" 12 #f swiss normal normal #"
 #"f))))) #(struct:translate 77.0 0.0 #(struct:translate 1.5 9.0 #(stru"
 #"ct:text \" \" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 80.0 0.0 #(struct:translate 3.5 9.0 #(struct:text \"a\""
 #" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate "
 #"87.0 0.0 #(struct:translate 5.0 "
 #"9.0 #(struct:text \"m\" 0 1 \"black\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 97.0 0.0 #(struct:translate 3.5 9.0 #(struct:"
 #"text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:"
 #"translate 104.0 0.0 #(struct:translate 3.0 9.0 #(struct:text \"s\" 0"
 #" 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 11"
 #"0.0 0.0 #(struct:translate 1.5 9.0 #(struct:text \"t\" 0 1 \"black\""
 #" 12 #f swiss normal normal #f))))) #(struct:translate 113.0 0.0 #(st"
 #"ruct:translate 2.0 9.0 #(struct:text \"r\" 0 1 \"black\" 12 #f swiss"
 #" normal normal #f))))) #(struct:translate 117.0 0.0 #(struct:transla"
 #"te 3.5 9.0 #(struct:text \"a\" 0 1 \"black\" 12 #f swiss normal norm"
 #"al #f))))) #(struct:translate 124.0 0.0 #(struct:translate 1.5 9.0 #"
 #"(struct:text \" \" 0 1 \"black\" 12 #f swiss normal normal #f))))) #"
 #"(struct:translate 127.0 0.0 #(struct:translate 3.5 9.0 #(struct:text"
 #" \"\303\251\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 134.0 0.0 #(struct:t"
 #"ranslate 1.5 9.0 #(struct:text \":\" 0 1 \"black\" 12 #f swiss norma"
 #"l normal #f))))) #(struct:translate 137.0 0.0 #(struct:translate 1.5"
 #" 9.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss normal normal #f)"
 #")))) #(struct:translate 140.0 0.0 #(struct:translate 3.5 9.0 #(struc"
 #"t:text \"6\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struc"
 #"t:translate 147.0 0.0 #(struct:translate 3.5 9.0 #(struct:text \"0\""
 #" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate "
 #"20 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 38.0 3.5 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:translate 4.0 11.5 #(stru"
 #"ct:text \"1\" 0 1 \"black\" 15 #f swiss normal normal #f))) #(struct"
 #":translate 8.0 0.0 #(struct:translate 4.0 11.5 #(struct:text \"0\" 0"
 #" 1 \"black\" 15 #f swiss normal normal #f))))) #(struct:translate 16"
 #".0 0.0 #(struct:translate 4.0 11.5 #(struct:text \"0\" 0 1 \"black\""
 #" 15 #f swiss normal normal #f))))) #(struct:translate 0 0 #(struct:t"
 #"ranslate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #("
 #"struct:pulled-point 0 0 100 0 0 0) #(struct:pulled-point 0 0 100 30 "
 #"0 0) #(struct:pulled-point 0 0 0 30 0 0)) 255 \"red\"))))) #(struct:"
 #"translate 100 0 #(struct:overlay #(struct:translate 0 3.5 #(struct:t"
 #"ranslate 4.0 11.5 #(struct:text \"0\" 0 1 \"white\" 15 #f swiss norm"
 #"al normal #f))) #(struct:translate 4.0 0 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 0 0 0) #(struct:pulled-point 0 0 0 30 0 0) #(struct:pulled-"
 #"point 0 0 0 30 0 0)) 255 \"orange\")))))))) #(struct:bb 154.0 48.0 4"
 #"4.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 17 3 50 #";(visualiza-resultado \"grupo1\" \"grupo2\" 801 73) = "
0 6           4 17 5276
(24
 #"(#(struct:overlay #(struct:translate 0 30 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(stru"
 #"ct:translate 4.5 9.0 #(struct:text \"O\" 0 1 \"black\" 12 #f swiss n"
 #"ormal normal #f))) #(struct:translate 9.0 0.0 #(struct:translate 1.5"
 #" 9.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss normal normal #f)"
 #")))) #(struct:translate 12.0 0.0 #(struct:translate 1.5 9.0 #(struct"
 #":text \"t\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct"
 #":translate 15.0 0.0 #(struct:translate 3.5 9.0 #(struct:text \"a\" 0"
 #" 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 22"
 #".0 0.0 #(struct:translate 5.0 9.0 #(struct:text \"m\" 0 1 \"black\" "
 #"12 #f swiss normal normal #f))))) #(struct:translate 32.0 0.0 #(stru"
 #"ct:translate 3.5 9.0 #(struct:text \"a\" 0 1 \"black\" 12 #f swiss n"
 #"ormal normal #f))))) #(struct:translate 39.0 0.0 #(struct:translate "
 #"3.5 9.0 #(struct:text \"n\" 0 1 \"black\" 12 #f swiss normal normal "
 #"#f))))) #(struct:translate 46.0 0.0 #(struct:translate 3.5 9.0 #(str"
 #"uct:text \"h\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(str"
 #"uct:translate 53.0 0.0 #(struct:t"
 #"ranslate 3.5 9.0 #(struct:text \"o\" 0 1 \"black\" 12 #f swiss norma"
 #"l normal #f))))) #(struct:translate 60.0 0.0 #(struct:translate 1.5 "
 #"9.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss normal normal #f))"
 #"))) #(struct:translate 63.0 0.0 #(struct:translate 3.5 9.0 #(struct:"
 #"text \"d\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:"
 #"translate 70.0 0.0 #(struct:translate 3.5 9.0 #(struct:text \"a\" 0 "
 #"1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate 77."
 #"0 0.0 #(struct:translate 1.5 9.0 #(struct:text \" \" 0 1 \"black\" 1"
 #"2 #f swiss normal normal #f))))) #(struct:translate 80.0 0.0 #(struc"
 #"t:translate 3.5 9.0 #(struct:text \"a\" 0 1 \"black\" 12 #f swiss no"
 #"rmal normal #f))))) #(struct:translate 87.0 0.0 #(struct:translate 5"
 #".0 9.0 #(struct:text \"m\" 0 1 \"black\" 12 #f swiss normal normal #"
 #"f))))) #(struct:translate 97.0 0.0 #(struct:translate 3.5 9.0 #(stru"
 #"ct:text \"o\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 104.0 0.0 #(struct:t"
 #"ranslate 3.0 9.0 #(struct:text \"s\" 0 1 \"black\" 12 #f swiss norma"
 #"l normal #f))))) #(struct:translate 110.0 0.0 #(struct:translate 1.5"
 #" 9.0 #(struct:text \"t\" 0 1 \"black\" 12 #f swiss normal normal #f)"
 #")))) #(struct:translate 113.0 0.0 #(struct:translate 2.0 9.0 #(struc"
 #"t:text \"r\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struc"
 #"t:translate 117.0 0.0 #(struct:translate 3.5 9.0 #(struct:text \"a\""
 #" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:translate "
 #"124.0 0.0 #(struct:translate 1.5 9.0 #(struct:text \" \" 0 1 \"black"
 #"\" 12 #f swiss normal normal #f))))) #(struct:translate 127.0 0.0 #("
 #"struct:translate 3.5 9.0 #(struct:text \"\303\251\" 0 1 \"black\" 12"
 #" #f swiss normal normal #f))))) #(struct:translate 134.0 0.0 #(struc"
 #"t:translate 1.5 9.0 #(struct:text \":\" 0 1 \"black\" 12 #f swiss no"
 #"rmal normal #f))))) #(struct:translate 137.0 0.0 #(struct:translate "
 #"1.5 9.0 #(struct:text \" \" 0 1 \"black\" 12 #f swiss normal normal "
 #"#f))))) #(struct:translate 140.0 0.0 #(struct:translate 3.5 9.0 #(st"
 #"ruct:text \"8\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 147.0 0.0 #(struct:translate 3.5 9.0 #(struct:text \""
 #"7\" 0 1 \"black\" 12 #f swiss normal normal #f))))) #(struct:transla"
 #"te 154.0 0.0 #(struct:translate 3.5 9.0 #(struct:text \"4\" 0 1 \"bl"
 #"ack\" 12 #f swiss normal normal #f))))) #(struct:translate 20 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transl"
 #"ate 38.0 3.5 #(struct:overlay #(struct:translate 0 0 #(struct:transl"
 #"ate 4.0 11.5 #(struct:text \"9\" 0 1 \"black\" 15 #f swiss normal no"
 #"rmal #f))) #(struct:translate 8.0 0.0 #(struct:translate 4.0 11.5 #("
 #"struct:text \"2\" 0 1 \"black\" 15 #f swiss normal normal #f))))) #("
 #"struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 92 0 0 0) #(s"
 #"truct:pulled-point 0 0 92 30 0 0) #(struct:pulled-point 0 0 0 30 0 0"
 #")) 255 \"red\"))))) #(struct:translate 92 0 #(struct:overlay #(struc"
 #"t:translate 0.5 3.5 #(struct:translate 4.0 11.5 #(struct:text \"8\" "
 #"0 1 \"black\" 15 #f swiss normal normal #f))) #(struct:translate 0 0"
 #" #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 9 0 0 0) #(struct:pulled-point 0 "
 #"0 9 30 0 0) #(struct:pulled-point 0 0 0 30 0 0)) 255 \"orange\")))))"
 #"))) #(struct:bb 161.0 48.0 44.0) #f)"
) 0 0 24 29 1 #"\n"
0 0 17 3 22 #";(visualiza-resultado "
0 0 17 3 8 #"\"grupo1\""
0 0 17 3 10 #" \"grupo2\" "
0 0 17 3 15 #"0 0) = (erro!) "
0 0 17 3 10 #"rectangle:"
0 0 17 3 1 #" "
0 0 17 3 7 #"expects"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 3 #"non"
0 0 17 3 1 #" "
0 0 17 3 8 #"negative"
0 0 17 3 1 #" "
0 0 17 3 4 #"real"
0 0 17 3 1 #" "
0 0 17 3 6 #"number"
0 0 17 3 1 #" "
0 0 17 3 2 #"as"
0 0 17 3 1 #" "
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 8 #"argument"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 5 #"given"
0 0 17 3 3 #" -1"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"visualiza-resultado"
0 0 24 3 1 #" "
0 0 14 3 6 #"grupo1"
0 0 24 3 1 #" "
0 0 14 3 6 #"grupo2"
0 0 24 3 1 #" "
0 0 14 3 2 #"n1"
0 0 24 3 1 #" "
0 0 14 3 2 #"n2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #" ("
0 0 14 3 17 #"calcula-proporcao"
0 0 24 3 1 #" "
0 0 14 3 2 #"n1"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 2 #"n1"
0 0 24 3 1 #" "
0 0 14 3 2 #"n2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"lado"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"cor-letras1"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"cor-letras2"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 21 3 2 #"83"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 21 3 2 #"91"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"           [("
0 0 14 3 1 #">"
0 0 24 3 1 #" "
0 0 14 3 4 #"lado"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 4 #"lado"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"           )         "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 4 #"lado"
0 0 24 3 1 #" "
0 0 21 3 2 #"17"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         )"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"     ] "
0 0 17 3 92
(25
 #";A propor\303\247\303\243o entre os r"
 #"et\303\242ngulos n\303\243o fica correta, mas fica visualmente mais "
 #"agrad\303\241vel."
) 0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 11 #"cor-letras1"
0 0 24 3 2 #" ("
0 0 14 3 13 #"seleciona-cor"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 11 #"cor-letras2"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    )"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"overlay/xy"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 13 #"string-append"
0 0 24 3 1 #" "
0 0 19 3 27 #"\"O tamanho da amostra \303\251: \""
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 2 #"n1"
0 0 24 3 1 #" "
0 0 14 3 2 #"n2"
0 0 24 3 4 #"))) "
0 0 21 3 2 #"12"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"black"
0 0 19 3 1 #"\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 3 #"-30"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 10 #"overlay/xy"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 7 #"overlay"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #") "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 14 3 11 #"cor-letras1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"solid"
0 0 19 3 1 #"\""
0 0 24 3 2 #" ("
0 0 14 3 13 #"seleciona-cor"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          )"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 7 #"overlay"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #")) "
0 0 21 3 2 #"15"
0 0 24 3 1 #" "
0 0 14 3 11 #"cor-letras2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 4 #"lado"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"solid"
0 0 19 3 1 #"\""
0 0 24 3 2 #" ("
0 0 14 3 13 #"seleciona-cor"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           )"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          )"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   )"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0           0
