#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.7 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 65 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 100 149 237 0 0 0 -1 -1 0
42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 50 205 50 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 152 251 152 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
25 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
45 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
47 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
          0 4124 0 4 3 85
(4
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(5
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 194
(6
 #"#reader(lib \"htdp-beginner-reader.ss\" \"lang\")((modname lista4-Ra"
 #"faelEberhardt_A) (read-case-sensitive #t) (teachpacks ()) (htdp-sett"
 #"ings #(#t constructor repeating-decimal #f #t none #f () #f)))"
) 0 0 4 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 26 #";; Nome: Rafael Eberhardt "
0 0 25 29 1 #"\n"
0 0 17 3 11 #";; Turma: A"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 53 #";;---------------------------------------------------"
0 0 17 3 2 #"--"
0 0 17 3 2 #"--"
0 0 17 3 3 #"---"
0 0 17 3 2 #"--"
0 0 17 3 3 #"---"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 2 #"--"
0 0 17 3 1 #"-"
0 0 17 11 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 4 #"----"
0 0 25 29 1 #"\n"
0 0 17 3 29 #";sharingan: n\303\272mero -> imagem"
0 0 25 29 1 #"\n"
0 0 17 3 52
(7
 #";Obj:Dado um n\303\272mero real"
 #" n\303\243o negativo, a fun\303\247\303\243o "
) 0 0 17 3 8 #"retorna "
0 0 17 3 2 #"a "
0 0 17 3 7 #"imagem "
0 0 17 3 3 #"de "
0 0 17 11 3 #"um "
0 0 17 3 11 #"sharingan, "
0 0 17 3 25 #"na escala correspondente."
0 0 25 29 1 #"\n"
0 0 17 3 60
(8
 #";(As dimens\303\265es do sharingan na escala 1 s\303\243o arbitr\303"
 #"\241rias)."
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 9 #";Exemplo:"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 9 #"sharingan"
0 0 17 3 1 #" "
0 0 17 3 5 #"1) = "
0 6           4 17 2646
(9
 #"(#(struct:overlay #(struct:translate 38 40 #(struct:translate 2 2 #("
 #"struct:ellipse 4 4 0 255 \"white\"))) #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 10 10 #(struct:translate 15.29076323672"
 #"0945 20.947617486213325 #(struct:translate -6.010407640085653 -11.66"
 #"7261889578034 #(struct:ellipse 8 25 45 255 \"white\")))) #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 14.074250831613295 1"
 #"0.0 #(struct:overlay #(struct:translate 17.925749168386705 22.0 #(st"
 #"ruct:translate 3 3 #(struct:ellipse 6 6 0 255 \"red\"))) #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 13/2 12 #(struct:tra"
 #"nslate -0.0 -1.8756443470178592 #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 11.999999999999998 10.535898384862247 0 0) #(struct:pulled-p"
 #"oint 0 0 0.0 14.000000000000002 0 0) #(struct:pulled-point 0 0 12.0 "
 #"17.464101615137753 0 0) #(struct:pulled-point 0 0 21.0 26.1243556529"
 #"8214 0 0) #(struct:pulled-point 0 0 18 14 0 0) #(struct:pulled-point"
 #" 0 0 21.0 1.8756443470178592 0 0)) 255 \"black\"))) #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 0 9.399903149603109 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:translate -3.854875211470933 23.79586742"
 #"7005604 #(struct:translate 24.780624379857638 -8.195770576608712 #(s"
 #"truct:ellipse 50 15 35 outline \"black\")))) #(struct:translate 3.55"
 #"2713678800501e-15 1.7763568394002505e-15 #(struct:translate 37.10272"
 #"7002978654 36.083148091340476 #(struct:translate -16.176977834591952"
 #" -20.48305124094359 #(struct:ellipse 15 50 55 outline \"black\")))))"
 #") #(struct:translate 13.425749168386705 0 #(struct:translate 15/2 25"
 #" #(struct:ellipse 15 50 0 outline \"black\"))))) #(struct:translate "
 #"13.425749168386705 0.0 #(struct:translate 15/2 25 #(struct:ellipse 1"
 #"5 50 0 255 \"red\"))))) #(struct:translate 3.552713678800501e-15 9.3"
 #"9990314960311 #(struct:translate 37.102727002978654 36.0831480913404"
 #"76 #(struct:translate -16.176977834591952 -20.48305124094359 #(struc"
 #"t:ellipse 15 50 55 255 \"red\")))))) #(struct:translate 0.0 9.399903"
 #"149603109 #(struct:translate -3.854875211470933 23.795867427005604 #"
 #"(struct:translate 24.780624379857638 -8.195770576608712 #(struct:ell"
 #"ipse 50 15 35 255 \"red\")))))))))) #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 7 7 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:translate 28 28 #(struct:ellipse 56 56 0 outline \"red\""
 #"))) #(struct:translate 0 0 #(struct:translate 28 28 #(struct:ellipse"
 #" 56 56 0 255 \"black\"))))) #(struct:translate 0 0 #(struct:translat"
 #"e 35 35 #(struct:ellipse 70 70 0 255 \"white\")))))))))) #(struct:bb"
 #" 70.0 70.0 70.0) #f)"
) 0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 9 #"sharingan"
0 0 17 3 1 #" "
0 0 17 3 7 #"0.5) = "
0 6           4 17 2668
(10
 #"(#(struct:overlay #(struct:translate 19 20 #(struct:translate 1 1 #("
 #"struct:ellipse 2 2 0 255 \"white\"))) #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 5 5 #(struct:translate 7.64538161836047"
 #"3 10.473808743106662 #(struct:translate -3.0052038200428264 -5.83363"
 #"0944789017 #(struct:ellipse 4 25/2 45 255 \"white\")))) #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 7.037125415806647 5.0"
 #" #(struct:overlay #(struct:translate 8.962874584193353 11.0 #(struct"
 #":translate 3/2 3/2 #(struct:ellipse 3 3 0 255 \"red\"))) #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 13/4 6 #(struct:tran"
 #"slate -0.0 -0.8708348754011492 #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 5.749999999999999 5.200961894323342 0 0) #(struct:pulled-poin"
 #"t 0 0 0.0 6.500000000000001 0 0) #(struct:pulled-point 0 0 5.75 7.79"
 #"9038105676658 0 0) #(struct:pulled-point 0 0 9.75 12.12916512459885 "
 #"0 0) #(struct:pulled-point 0 0 8 13/2 0 0) #(struct:pulled-point 0 0"
 #" 9.75 0.8708348754011492 0 0)) 255 \"black\"))) #(struct:translate 0"
 #" 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 0 4.699951574801554 #(struct:overlay #(struct"
 #":translate 0 0 #(struct:translate -1.9274376057354665 11.89793371350"
 #"2802 #(struct:translate 12.390312189928819 -4.097885288304356 #(stru"
 #"ct:ellipse 25 15/2 35 outline \"black\")))) #(struct:translate 1.776"
 #"3568394002505e-15 8.881784197001252e-16 #(struct:translate 18.551363"
 #"501489327 18.041574045670238 #(struct:translate -8.088488917295976 -"
 #"10.241525620471794 #(struct:ellipse 15/2 25 55 outline \"black\"))))"
 #")) #(struct:translate 6.712874584193353 0 #(struct:translate 15/4 25"
 #"/2 #(struct:ellipse 15/2 25 0 outline \"black\"))))) #(struct:transl"
 #"ate 6.712874584193353 0.0 #(struct:translate 15/4 25/2 #(struct:elli"
 #"pse 15/2 25 0 255 \"red\"))))) #(struct:translate 1.7763568394002505"
 #"e-15 4.699951574801555 #(struct:translate 18.551363501489327 18.0415"
 #"74045670238 #(struct:translate -8.088488917295976 -10.24152562047179"
 #"4 #(struct:ellipse 15/2 25 55 255 \"red\")))))) #(struct:translate 0"
 #".0 4.699951574801554 #(struct:translate -1.9274376057354665 11.89793"
 #"3713502802 #(struct:translate 12.390312189928819 -4.097885288304356 "
 #"#(struct:ellipse 25 15/2 35 255 \"red\")))))))))) #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 7/2 7/2 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:translate 14 14 #(struct:ellipse 28 28"
 #" 0 outline \"red\"))) #(struct:translate 0 0 #(struct:translate 14 1"
 #"4 #(struct:ellipse 28 28 0 255 \"black\"))))) #(struct:translate 0 0"
 #" #(struct:translate 35/2 35/2 #(struct:ellipse 35 35 0 255 \"white\""
 #")))))))))) #(struct:bb 35.0 35.0 35.0) #f)"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 52
#";N\303\243o faz muito sentido gerar testes para esse tipo "
0 0 17 3 3 #"de "
0 0 17 3 10 #"fun\303\247\303\243o, "
0 0 17 3 6 #"pois, "
0 0 17 11 5 #"para "
0 0 17 3 6 #"gerar "
0 0 17 3 2 #"o "
0 0 17 3 10 #"resultado "
0 0 17 3 3 #"do "
0 0 17 3 7 #"teste, "
0 0 17 3 3 #"eu "
0 0 17 3 5 #"devo "
0 0 17 3 6 #"rodar "
0 0 17 3 2 #"a "
0 0 17 3 9 #"fun\303\247\303\243o "
0 0 17 3 9 #"antes, o "
0 0 17 3 4 #"que "
0 0 17 11 10 #"j\303\241 \303\251 um "
0 0 17 3 12 #"teste em si,"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"sharingan"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #") "
0 0 17 3 25 #";S\303\263 fica bonito pequeno."
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"overlay/xy"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 6 #"circle"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-38"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-40"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 10 #"overlay/xy"
0 0 25 3 2 #" ("
0 0 14 3 6 #"rotate"
0 0 25 3 1 #" "
0 0 22 3 3 #"135"
0 0 25 3 2 #" ("
0 0 14 3 7 #"ellipse"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"25"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 37 #"                                    ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-10"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-10"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 7 #"overlay"
0 0 25 3 2 #" ("
0 0 14 3 11 #"cornea_shar"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 12 #"esclera_shar"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 32 #";esclera_shar: n\303\272mero -> imagem"
0 0 25 29 1 #"\n"
0 0 17 3 53
#";Obj: Dado o valor da escala, a fun\303\247\303\243o retorna uma "
0 0 17 3 7 #"imagem "
0 0 17 11 15 #"correspondente "
0 0 17 3 2 #"a "
0 0 17 3 8 #"somente "
0 0 17 3 3 #"\303\240 "
0 0 17 3 8 #"regi\303\243o "
0 0 17 3 7 #"branca "
0 0 17 3 18 #"do olho sharingan."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 5 #";Ex.:"
0 0 25 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 18 #"esclera_shar 1) = "
0 6           4 17 352
(11
 #"(#(struct:overlay #(struct:translate 7 7 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:translate 28 28 #(struct:ellipse 56 56 0 outli"
 #"ne \"red\"))) #(struct:translate 0 0 #(struct:translate 28 28 #(stru"
 #"ct:ellipse 56 56 0 255 \"black\"))))) #(struct:translate 0 0 #(struc"
 #"t:translate 35 35 #(struct:ellipse 70 70 0 255 \"white\")))) #(struc"
 #"t:bb 70 70 70) #f)"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"esclera_shar"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 6 #"circle"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"28"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #") "
0 0 19 3 9 #"\"outline\""
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 6 #"circle"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"28"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 6 #"circle"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"35"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 31 #";cornea_shar: n\303\272mero -> imagem"
0 0 25 29 1 #"\n"
0 0 17 3 53
#";Obj: Dado o valor da escala, a fun\303\247\303\243o retorna uma "
0 0 17 3 7 #"imagem "
0 0 17 11 15 #"correspondente "
0 0 17 3 2 #"a "
0 0 17 3 8 #"somente "
0 0 17 3 3 #"ao "
0 0 17 3 8 #"padr\303\243o "
0 0 17 3 8 #"interno "
0 0 17 3 3 #"\303\240 "
0 0 17 3 8 #"regi\303\243o "
0 0 17 3 24 #"preta do olho sharingan."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 5 #";Ex.:"
0 0 25 29 1 #"\n"
0 0 17 3 19 #";(cornea_shar 1) = "
0 6           4 17 1896
(12
 #"(#(struct:overlay #(struct:translate 17.925749168386705 22.0 #(struc"
 #"t:translate 3 3 #(struct:ellipse 6 6 0 255 \"red\"))) #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 13/2 12 #(struct:transl"
 #"ate -0.0 -1.8756443470178592 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 11.999999999999998 10.535898384862247 0 0) #(struct:pulled-poin"
 #"t 0 0 0.0 14.000000000000002 0 0) #(struct:pulled-point 0 0 12.0 17."
 #"464101615137753 0 0) #(struct:pulled-point 0 0 21.0 26.1243556529821"
 #"4 0 0) #(struct:pulled-point 0 0 18 14 0 0) #(struct:pulled-point 0 "
 #"0 21.0 1.8756443470178592 0 0)) 255 \"black\"))) #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 0 9.399903149603109 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:translate -3.854875211470933 23.79586742700"
 #"5604 #(struct:translate 24.780624379857638 -8.195770576608712 #(stru"
 #"ct:ellipse 50 15 35 outline \"black\")))) #(struct:translate 3.55271"
 #"3678800501e-15 1.7763568394002505e-15 #(struct:translate 37.10272700"
 #"2978654 36.083148091340476 #(struct:translate -16.176977834591952 -2"
 #"0.48305124094359 #(struct:ellipse 15 50 55 outline \"black\")))))) #"
 #"(struct:translate 13.425749168386705 0 #(struct:translate 15/2 25 #("
 #"struct:ellipse 15 50 0 outline \"black\"))))) #(struct:translate 13."
 #"425749168386705 0.0 #(struct:translate 15/2 25 #(struct:ellipse 15 5"
 #"0 0 255 \"red\"))))) #(struct:translate 3.552713678800501e-15 9.3999"
 #"0314960311 #(struct:translate 37.102727002978654 36.083148091340476 "
 #"#(struct:translate -16.176977834591952 -20.48305124094359 #(struct:e"
 #"llipse 15 50 55 255 \"red\")))))) #(struct:translate 0.0 9.399903149"
 #"603109 #(struct:translate -3.854875211470933 23.795867427005604 #(st"
 #"ruct:translate 24.780624379857638 -8.195770576608712 #(struct:ellips"
 #"e 50 15 35 255 \"red\"))))))))) #(struct:bb 41.85149833677341 50.0 5"
 #"0.0) #f)"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"cornea_shar"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 6 #"circle"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 10 #"overlay/xy"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 11 #"radial-star"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 4 #"-6.5"
0 0 25 11 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-12"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 7 #"overlay"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 6 #"rotate"
0 0 25 3 1 #" "
0 0 22 3 2 #"35"
0 0 25 3 2 #" ("
0 0 14 3 7 #"ellipse"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #") "
0 0 19 3 9 #"\"outline\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 6 #"rotate"
0 0 25 3 1 #" "
0 0 22 3 3 #"145"
0 0 25 3 2 #" ("
0 0 14 3 7 #"ellipse"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #") "
0 0 19 3 9 #"\"outline\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 7 #"ellipse"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #") "
0 0 19 3 9 #"\"outline\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 7 #"ellipse"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 6 #"rotate"
0 0 25 3 1 #" "
0 0 22 3 3 #"145"
0 0 25 3 2 #" ("
0 0 14 3 7 #"ellipse"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 6 #"rotate"
0 0 25 3 1 #" "
0 0 22 3 2 #"35"
0 0 25 3 2 #" ("
0 0 14 3 7 #"ellipse"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 11 6 #")) )) "
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 53 #";;---------------------------------------------------"
0 0 17 3 2 #"--"
0 0 17 3 2 #"--"
0 0 17 3 3 #"---"
0 0 17 3 2 #"--"
0 0 17 3 3 #"---"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 2 #"--"
0 0 17 3 1 #"-"
0 0 17 11 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 4 #"----"
0 0 25 29 1 #"\n"
0 0 17 3 27 #";galinha: n\303\272mero -> imagem"
0 0 25 29 1 #"\n"
0 0 17 3 52 7 0 0 17 3 8 #"retorna "
0 0 17 3 2 #"a "
0 0 17 3 7 #"imagem "
0 0 17 3 3 #"de "
0 0 17 11 4 #"uma "
0 0 17 3 9 #"galinha, "
0 0 17 3 25 #"na escala correspondente."
0 0 25 29 1 #"\n"
0 0 17 3 58
(13
 #";(As dimens\303\265es da galinha"
 #" na escala 1 s\303\243o arbitr\303\241rias)."
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 9 #";Exemplo:"
0 0 25 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 13 #"galinha 1) = "
0 6           4 17 1264
(14
 #"(#(struct:translate 31.3203125 0.0 #(struct:overlay #(struct:curve-s"
 #"egment #(struct:point 2 30) 5 -5 #(struct:point 2 45) 0 -1/10 solid "
 #"\"red\") #(struct:overlay #(struct:translate 0 8 #(struct:overlay #("
 #"struct:translate 10 15 #(struct:overlay #(struct:translate 3 3 #(str"
 #"uct:translate 5 5 #(struct:ellipse 10 10 0 255 \"black\"))) #(struct"
 #":translate 0 0 #(struct:translate "
 #"8 8 #(struct:ellipse 16 16 0 255 \"white\"))))) #(struct:translate 0"
 #" 0 #(struct:translate 30 30 #(struct:ellipse 60 60 0 255 \"yellow\")"
 #")))) #(struct:translate 8 0 #(struct:translate 22.360679774997905 61"
 #".55367074350507 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 42.36067977499789 -30.776835371752533 0 0"
 #") #(struct:pulled-point 0 0 0.0 -61.55367074350507 0 0) #(struct:pul"
 #"led-point 0 0 -16.18033988749896 -11.75570504584947 0 0) #(struct:pu"
 #"lled-point 0 0 36.180339887498945 -11.755705045849464 0 0) #(struct:"
 #"pulled-point 0 0 20.0 -61.55367074350507 0 0) #(struct:pulled-point "
 #"0 0 -22.360679774997905 -30.776835371752544 0 0) #(struct:pulled-poi"
 #"nt 0 0 20 0 0 0) #(struct:pulled-point 0 0 36.180339887498945 -49.79"
 #"7965697655606 0 0) #(struct:pulled-point 0 0 -16.180339887498953 -49"
 #".79796569765561 0 0)) 255 \"red\")))))) #(struct:bb 104.041672049995"
 #"8 68.0 68.0) #f)"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 7 #"galinha"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 15 #"add-solid-curve"
0 0 25 29 1 #"\n"
0 0 25 3 2 #" ("
0 0 14 3 10 #"overlay/xy"
0 0 25 3 2 #" ("
0 0 14 3 10 #"overlay/xy"
0 0 25 3 2 #" ("
0 0 14 3 7 #"overlay"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 6 #"circle"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 6 #"circle"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 26 #"                         ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-10"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-15"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 26 #"                         ("
0 0 14 3 6 #"circle"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 8 #"\"yellow\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"-8"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 12 #"star-polygon"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #") "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #") "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 22 3 2 #"-5"
0 0 25 29 1 #"\n"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"45"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 4 #"-0.1"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 53 #";;---------------------------------------------------"
0 0 17 3 2 #"--"
0 0 17 3 2 #"--"
0 0 17 3 3 #"---"
0 0 17 3 2 #"--"
0 0 17 3 3 #"---"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 2 #"--"
0 0 17 3 1 #"-"
0 0 17 11 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 4 #"----"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";olho: n\303\272mero -> imagem"
0 0 25 29 1 #"\n"
0 0 17 3 52 7 0 0 17 3 8 #"retorna "
0 0 17 3 2 #"a "
0 0 17 3 7 #"imagem "
0 0 17 3 3 #"de "
0 0 17 11 3 #"um "
0 0 17 3 5 #"olho "
0 0 17 3 7 #"humano "
0 0 17 3 8 #"normal, "
0 0 17 3 25 #"na escala correspondente."
0 0 25 29 1 #"\n"
0 0 17 3 55
(15
 #";(As dimens\303\265es do olho na escala 1 s\303\243o arbitr\303\241r"
 #"ias)."
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 9 #";Exemplo:"
0 0 25 29 1 #"\n"
0 0 17 3 12 #";(olho 1) = "
0 6           4 17 1013
(16
 #"(#(struct:overlay #(struct:translate 13 13 #(struct:overlay #(struct"
 #":translate 40 40 #(struct:translat"
 #"e 3 3 #(struct:ellipse 6 6 0 255 \"white\"))) #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 10 0 #(struct:translate 10 10 #"
 #"(struct:ellipse 20 20 0 255 \"white\"))) #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 2 2 #(struct:overlay #(struct:transl"
 #"ate 10 10 #(struct:overlay #(struct:translate 4 4 #(struct:translate"
 #" 16 16 #(struct:ellipse 32 32 0 outline \"brown\"))) #(struct:transl"
 #"ate 0 0 #(struct:translate 20 20 #(struct:ellipse 40 40 0 255 \"blac"
 #"k\"))))) #(struct:translate 0 0 #(struct:translate 30 30 #(struct:el"
 #"lipse 60 60 0 255 \"cyan\"))))) #(struct:translate 0 0 #(struct:tran"
 #"slate 32 32 #(struct:ellipse 64 64 0 255 \"seagreen\"))))))))) #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:t"
 #"ranslate 45 45 #(struct:ellipse 90 90 0 255 \"white\"))) #(struct:tr"
 #"anslate 0 0 #(struct:translate 45 45 #(struct:ellipse 90 90 0 outlin"
 #"e \"black\")))))) #(struct:bb 90 90 90) #f)"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"olho"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 25 3 2 #" ("
0 0 14 3 11 #"cornea_olho"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 12 #"esclera_olho"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 32 #";esclera_olho: n\303\272mero -> imagem"
0 0 25 29 1 #"\n"
0 0 17 3 53
#";Obj: Dado o valor da escala, a fun\303\247\303\243o retorna uma "
0 0 17 3 7 #"imagem "
0 0 17 11 15 #"correspondente "
0 0 17 3 2 #"a "
0 0 17 3 8 #"somente "
0 0 17 3 3 #"\303\240 "
0 0 17 3 8 #"regi\303\243o "
0 0 17 3 7 #"branca "
0 0 17 3 15 #"do olho humano."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 5 #";Ex.:"
0 0 25 29 1 #"\n"
0 0 17 3 20 #";(esclera_olho 1) = "
0 6           4 17 224
(17
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:translate 45 45 #("
 #"struct:ellipse 90 90 0 255 \"white\"))) #(struct:translate 0 0 #(str"
 #"uct:translate 45 45 #(struct:ellipse 90 90 0 outline \"black\")))) #"
 #"(struct:bb 90 90 90) #f)"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"esclera_olho"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"overlay"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 6 #"circle"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"45"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 6 #"circle"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"45"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #") "
0 0 19 3 9 #"\"outline\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 31 #";cornea_olho: n\303\272mero -> imagem"
0 0 25 29 1 #"\n"
0 0 17 3 53
#";Obj: Dado o valor da escala, a fun\303\247\303\243o retorna uma "
0 0 17 3 7 #"imagem "
0 0 17 11 15 #"correspondente "
0 0 17 3 2 #"a "
0 0 17 3 8 #"somente "
0 0 17 3 3 #"\303\240 "
0 0 17 3 8 #"regi\303\243o "
0 0 17 3 5 #"onde "
0 0 17 3 3 #"se "
0 0 17 3 12 #"identifica, "
0 0 17 3 13 #"normalmente, "
0 0 17 3 2 #"a "
0 0 17 11 12 #"cor do olho "
0 0 17 3 8 #"humano, "
0 0 17 3 16 #"junto da pupila."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 5 #";Ex.:"
0 0 25 29 1 #"\n"
0 0 17 3 19 #";(cornea_olho 1) = "
0 6           4 17 747
(18
 #"(#(struct:overlay #(struct:translate 40 40 #(struct:translate 3 3 #("
 #"struct:ellipse 6 6 0 255 \"white\"))) #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 10 0 #(struct:translate 10 10 #(struct:"
 #"ellipse 20 20 0 255 \"white\"))) #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 2 2 #(struct:overlay #(struct:translate 10 1"
 #"0 #(struct:overlay #(struct:translate 4 4 #(struct:translate 16 16 #"
 #"(struct:ellipse 32 32 0 outline \"brown\"))) #(struct:translate 0 0 "
 #"#(struct:translate 20 20 #(struct:ellipse 40 40 0 255 \"black\")))))"
 #" #(struct:translate 0 0 #(struct:translate 30 30 #(struct:ellipse 60"
 #" 60 0 255 \"cyan\"))))) #(struct:translate 0 0 #(struct:translate 32"
 #" 32 #(struct:ellipse 64 64 0 255 \"seagreen\")))))))) #(struct:bb 64"
 #" 64 64) #f)"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"cornea_olho"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"overlay/xy"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 6 #"circle"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-40"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-40"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"overlay/xy"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 6 #"circle"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"white\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-10"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 7 #"overlay"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 6 #"circle"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"16"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #")  "
0 0 19 3 9 #"\"outline\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"brown\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 6 #"circle"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 6 #"circle"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 6 #"\"cyan\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 6 #"circle"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"32"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 10 #"\"seagreen\""
0 0 25 3 5 #")))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 53 #";;---------------------------------------------------"
0 0 17 3 2 #"--"
0 0 17 3 2 #"--"
0 0 17 3 3 #"---"
0 0 17 3 2 #"--"
0 0 17 3 3 #"---"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 2 #"--"
0 0 17 3 1 #"-"
0 0 17 11 1 #"-"
0 0 17 3 1 #"-"
0 0 17 3 4 #"----"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";goku: n\303\272mero -> imagem"
0 0 25 29 1 #"\n"
0 0 17 3 52 7 0 0 17 3 8 #"retorna "
0 0 17 3 2 #"a "
0 0 17 3 7 #"imagem "
0 0 17 3 3 #"de "
0 0 17 11 3 #"um "
0 0 17 3 9 #"saiyajin "
0 0 17 3 11 #"gen\303\251rico, "
0 0 17 3 25 #"na escala correspondente."
0 0 25 29 1 #"\n"
0 0 17 3 59
(19
 #";(As dimens\303\265es do saiyaji"
 #"n na escala 1 s\303\243o arbitr\303\241rias)."
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 9 #";Exemplo:"
0 0 25 29 1 #"\n"
0 0 17 3 14 #";(goku 0.6) = "
0 6           4 17 3610
(20
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:translate 18 48 #("
 #"struct:polygon (#(struct:pulled-point 0 0 9/5 0 0 0) #(struct:pulled"
 #"-point 0 0 0 6 0 0) #(struct:pulled-point 0 0 33/5 24 0 0) #(struct:"
 #"pulled-point 0 0 9 9 0 0) #(struct:pulled-point 0 0 12 27/5 0 0) #(s"
 #"truct:pulled-point 0 0 42/5 9 0 0) #(struct:pulled-point 0 0 12 30 0"
 #" 0) #(struct:pulled-point 0 0 72/5 18 0 0) #(struct:pulled-point 0 0"
 #" 24 9 0 0) #(struct:pulled-point 0 0 177/5 18 0 0) #(struct:pulled-p"
 #"oint 0 0 36 30 0 0) #(struct:pulled-point 0 0 207/5 18 0 0) #(struct"
 #":pulled-point 0 0 42 9 0 0) #(struct:pulled-point 0 0 219/5 12 0 0) "
 #"#(struct:pulled-point 0 0 42 21 0 0) #(struct:pulled-point 0 0 45 12"
 #"9/5 0 0) #(struct:pulled-point 0 0 219/5 21 0 0) #(struct:pulled-poi"
 #"nt 0 0 54 9 0 0) #(struct:pulled-point 0 0 51 12 0 0) #(struct:pulle"
 #"d-point 0 0 60 18 0 0) #(struct:pulled-point 0 0 57 42/5 0 0) #(stru"
 #"ct:pulled-point 0 0 72 12 0 0) #(struct:pulled-point 0 0 60 0 0 0) #"
 #"(struct:pulled-point 0 0 72 -6 0 0) #(struct:pulled-point 0 0 60 -3 "
 #"0 0) #(struct:pulled-point 0 0 57 -18 0 0) #(struct:pulled-point 0 0"
 #" 48 -12 0 0) #(struct:pulled-point 0 0 30 -48 0 0) #(struct:pulled-p"
 #"oint 0 0 18 -18 0 0) #(struct:pulled-point 0 0 6 -24 0 0) #(struct:p"
 #"ulled-point 0 0 6 -9 0 0) #(struct:pulled-point 0 0 0 -9 0 0) #(stru"
 #"ct:pulled-point 0 0 -18 -3 0 0) #(struct:pulled-point 0 0 0 18 0 0))"
 #" 255 \"yellow\"))) #(struct:translate 18 51 #(struct:overlay #(struc"
 #"t:translate 159/5 12 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:translate 21 -6 #(struct:polygon (#(struct:pulled-point 0 0 -3 6 0"
 #" 0) #(struct:pulled-point 0 0 -9 9 0 0) #(struct:pulled-point 0 0 -2"
 #"1 18 0 0) #(struct:pulled-point 0 0 -9 12 0 0) #(struct:pulled-point"
 #" 0 0 -24/5 12 0 0)) 255 \"black\"))) #(struct:translate 6/5 6 #(stru"
 #"ct:overlay #(struct:translate 6/5 3 #(struct:translate 3/2 12/5 #(st"
 #"ruct:ellipse 3 24/5 0 255 \"black\"))) #(struct:translate 0 0 #(stru"
 #"ct:translate 18 -12 #(struct:polygon (#(struct:pulled-point 0 0 -36/"
 #"5 12 0 0) #(struct:pulled-point 0 0 -18 84/5 0 0) #(struct:pulled-po"
 #"int 0 0 -84/5 21 0 0) #(struct:pulled-point 0 0 -9 99/5 0 0)) 255 \""
 #"white\"))))))) #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 48/5 12 #(struct:overlay #(struct:translate 0 0 #(struct:trans"
 #"late -3 -6 #(struct:polygon (#(struct:pulled-point 0 0 3 6 0 0) #(st"
 #"ruct:pulled-point 0 0 9 9 0 0) #(struct:pulled-point 0 0 21 18 0 0) "
 #"#(struct:pulled-point 0 0 9 12 0 0) #(struct:pulled-point 0 0 24/5 1"
 #"2 0 0)) 255 \"black\"))) #(struct:translate 6 6 #(struct:overlay #(s"
 #"truct:translate 33/5 3 #(struct:translate 3/2 12/5 #(struct:ellipse "
 #"3 24/5 0 255 \"black\"))) #(struct:translate 0 0 #(struct:translate "
 #"-36/5 -12 #(struct:polygon (#(struct:pulled-point 0 0 36/5 12 0 0) #"
 #"(struct:pulled-point 0 0 18 84/5 0 0) #(struct:pulled-point 0 0 84/5"
 #" 21 0 0) #(struct:pulled-point 0 0 9 99/5 0 0)) 255 \"white\")))))))"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 30 27 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0"
 #" 0 0) #(struct:pulled-point 0 0 9/5 18/5 0 0) #(struct:pulled-point "
 #"0 0 0 24/5 0 0)) 255 \"brown\"))) #(struct:translate 0 0 #(struct:ov"
 #"erlay #(struct:translate 141/5 33 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"6 0 0 0) #(struct:pulled-point 0 0 0 3/5 0 0)) 255 \"black\"))) #(st"
 #"ruct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct"
 #":pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 60 0 0 0) #(str"
 #"uct:pulled-point 0 0 48 30 0 0) #(struct:pulled-point 0 0 30 42 0 0)"
 #" #(struct:pulled-point 0 0 12 30 0 0)) 255 \"burlywood\"))))))))))))"
 #" #(struct:bb 90 93 93) #f)"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 4 #"goku"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"overlay/xy"
0 0 25 3 2 #" ("
0 0 14 3 11 #"cabelo_goku"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"85"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 9 #"face_goku"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  )"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 31 #";cabelo_goku: n\303\272mero -> imagem"
0 0 25 29 1 #"\n"
0 0 17 3 5 #";Obj:"
0 0 17 3 25 #" Dado o valor da escala, "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 8 #"fun\303\247\303\243o"
0 0 17 3 1 #" "
0 0 17 3 7 #"retorna"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 6 #"imagem"
0 0 17 3 1 #" "
0 0 17 3 2 #"de"
0 0 17 3 1 #" "
0 0 17 3 2 #"um"
0 0 17 3 1 #" "
0 0 17 3 6 #"cabelo"
0 0 17 11 1 #" "
0 0 17 3 7 #"amarelo"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 11 #"semelhante "
0 0 17 3 3 #"ao "
0 0 17 3 15 #"de um saiyajin."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 5 #";Ex.:"
0 0 25 29 1 #"\n"
0 0 17 3 19 #";(cabelo_goku 1) = "
0 6           4 17 1373
(21
 #"(#(struct:translate 24 64 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 12/5 0 0 0) #(struct:pulled-point 0 0 0 8 0 0) #(struct:pulled-poi"
 #"nt 0 0 44/5 32 0 0) #(struct:pulled-point 0 0 12 12 0 0) #(struct:pu"
 #"lled-point 0 0 16 36/5 0 0) #(struct:pulled-point 0 0 56/5 12 0 0) #"
 #"(struct:pulled-point 0 0 16 40 0 0) #(struct:pulled-point 0 0 96/5 2"
 #"4 0 0) #(struct:pulled-point 0 0 32 12 0 0) #(struct:pulled-point 0 "
 #"0 236/5 24 0 0) #(struct:pulled-point 0 0 48 40 0 0) #(struct:pulled"
 #"-point 0 0 276/5 24 0 0) #(struct:pulled-point 0 0 56 12 0 0) #(stru"
 #"ct:pulled-point 0 0 292/5 16 0 0) #(struct:pulled-point 0 0 56 28 0 "
 #"0) #(struct:pulled-point 0 0 60 172/5 0 0) #(struct:pulled-point 0 0"
 #" 292/5 28 0 0) #(struct:pulled-point 0 0 72 12 0 0) #(struct:pulled-"
 #"point 0 0 68 16 0 0) #(struct:pulled-point 0 0 80 24 0 0) #(struct:p"
 #"ulled-point 0 0 76 56/5 0 0) #(struct:pulled-point 0 0 96 16 0 0) #("
 #"struct:pulled-point 0 0 80 0 0 0) #(struct:pulled-point 0 0 96 -8 0 "
 #"0) #(struct:pulled-point 0 0 80 -4 0 0) #(struct:pulled-point 0 0 76"
 #" -24 0 0) #(struct:pulled-point 0 0 64 -16 0 0) #(struct:pulled-poin"
 #"t 0 0 40 -64 0 0) #(struct:pulled-point 0 0 24 -24 0 0) #(struct:pul"
 #"led-point 0 0 8 -32 0 0) #(struct:pulled-point 0 0 8 -12 0 0) #(stru"
 #"ct:pulled-point 0 0 0 -12 0 0) #(struct:pulled-point 0 0 -24 -4 0 0)"
 #" #(struct:pulled-point 0 0 0 24 0 0)) 255 \"yellow\")) #(struct:bb 1"
 #"20 104 104) #f)"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"cabelo_goku"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"polygon"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 12 #"))          "
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"9"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"14"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"24"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"40"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"59"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"60"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"69"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"70"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"73"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"70"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"35"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"75"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"43"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"73"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"35"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"90"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"85"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 12 #"))          "
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"95"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"14"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"120"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"120"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-10"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"-5"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"95"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-30"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"80"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-20"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-80"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-30"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-40"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-15"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-15"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-30"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"-5"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            )"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 19 3 7 #"\"solid\""
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 19 3 8 #"\"yellow\""
0 0 25 29 1 #"\n"
0 0 25 3 14 #"           ) )"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 36 #";esclera_esq_goku: n\303\272mero -> imagem"
0 0 25 29 1 #"\n"
0 0 17 3 53
#";Obj: Dado o valor da escala, a fun\303\247\303\243o retorna uma "
0 0 17 3 7 #"imagem "
0 0 17 11 15 #"correspondente "
0 0 17 3 2 #"a "
0 0 17 3 8 #"somente "
0 0 17 3 3 #"\303\240 "
0 0 17 3 8 #"regi\303\243o "
0 0 17 3 7 #"branca "
0 0 17 3 3 #"do "
0 0 17 3 5 #"olho "
0 0 17 3 17 #"esquerdo do goku."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 5 #";Ex.:"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 22 #"esclera_esq_goku 3) = "
0 6           4 17 235
(22
 #"(#(struct:translate -36 -60 #(struct:polygon (#(struct:pulled-point "
 #"0 0 36 60 0 0) #(struct:pulled-point 0 0 90 84 0 0) #(struct:pulled-"
 #"point 0 0 84 105 0 0) #(struct:pulled-point 0 0 45 99 0 0)) 255 \"wh"
 #"ite\")) #(struct:bb 54 45 45) #f)"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 16 #"esclera_esq_goku"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"polygon"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"28"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"28"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"35"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"33"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 19 3 7 #"\"solid\""
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 19 3 7 #"\"white\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 35 #";sobrancelha_esq: n\303\272mero -> imagem"
0 0 25 29 1 #"\n"
0 0 17 3 53
#";Obj: Dado o valor da escala, a fun\303\247\303\243o retorna uma "
0 0 17 3 7 #"imagem "
0 0 17 11 15 #"correspondente "
0 0 17 3 2 #"a "
0 0 17 3 8 #"somente "
0 0 17 3 3 #"\303\240 "
0 0 17 3 12 #"sobrancelha "
0 0 17 3 3 #"do "
0 0 17 3 5 #"olho "
0 0 17 3 17 #"esquerdo do goku."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 5 #";Ex.:"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 21 #"sobrancelha_esq 3) = "
0 6           4 17 272
(23
 #"(#(struct:translate -15 -30 #(struct:polygon (#(struct:pulled-point "
 #"0 0 15 30 0 0) #(struct:pulled-point 0 0 45 45 0 0) #(struct:pulled-"
 #"point 0 0 105 90 0 0) #(struct:pulled-point 0 0 45 60 0 0) #(struct:"
 #"pulled-point 0 0 24 60 0 0)) 255 \"black\")) #(struct:bb 90 60 60) #"
 #"f)"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 15 #"sobrancelha_esq"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"polygon"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"35"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 19 3 7 #"\"solid\""
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 19 3 7 #"\"black\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 33 #";olho_esq_goku: n\303\272mero -> imagem"
0 0 25 29 1 #"\n"
0 0 17 3 53
#";Obj: Dado o valor da escala, a fun\303\247\303\243o retorna uma "
0 0 17 3 7 #"imagem "
0 0 17 11 15 #"correspondente "
0 0 17 3 3 #"ao "
0 0 17 3 5 #"olho "
0 0 17 3 17 #"esquerdo do goku."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 5 #";Ex.:"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 19 #"olho_esq_goku 3) = "
0 6           4 17 683
(24
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:translate -15 -30 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 15 30 0 0) #(struct:pull"
 #"ed-point 0 0 45 45 0 0) #(struct:pulled-point 0 0 105 90 0 0) #(stru"
 #"ct:pulled-point 0 0 45 60 0 0) #(struct:pulled-point 0 0 24 60 0 0))"
 #" 255 \"black\"))) #(struct:translate 30 30 #(struct:overlay #(struct"
 #":translate 33 15 #(struct:translate 15/2 12 #(struct:ellipse 15 24 0"
 #" 255 \"black\"))) #(struct:translate 0 0 #(struct:translate -36 -60 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 36 60 0 0) #(struct:pull"
 #"ed-point 0 0 90 84 0 0) #(struct:pulled-point 0 0 84 105 0 0) #(stru"
 #"ct:pulled-point 0 0 45 99 0 0)) 255 \"white\")))))) #(struct:bb 90 7"
 #"5 75) #f)"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"olho_esq_goku"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"overlay/xy"
0 0 25 3 2 #" ("
0 0 14 3 15 #"sobrancelha_esq"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 10 #"overlay/xy"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 7 #"ellipse"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-11"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"-5"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 16 #"esclera_esq_goku"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 35 #";sobrancelha_dir: n\303\272mero -> imagem"
0 0 25 29 1 #"\n"
0 0 17 3 53
#";Obj: Dado o valor da escala, a fun\303\247\303\243o retorna uma "
0 0 17 3 7 #"imagem "
0 0 17 11 15 #"correspondente "
0 0 17 3 2 #"a "
0 0 17 3 8 #"somente "
0 0 17 3 3 #"\303\240 "
0 0 17 3 12 #"sobrancelha "
0 0 17 3 3 #"do "
0 0 17 3 5 #"olho "
0 0 17 3 16 #"direito do goku."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 5 #";Ex.:"
0 0 25 29 1 #"\n"
0 0 17 3 22 #";(sobrancelha_esq 3) ="
0 6           4 17 277
(25
 #"(#(struct:translate 105 -30 #(struct:polygon (#(struct:pulled-point "
 #"0 0 -15 30 0 0) #(struct:pulled-point 0 0 -45 45 0 0) #(struct:pulle"
 #"d-point 0 0 -105 90 0 0) #(struct:pulled-point 0 0 -45 60 0 0) #(str"
 #"uct:pulled-point 0 0 -24 60 0 0)) 255 \"black\")) #(struct:bb 90 60 "
 #"60) #f)"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 49 #";Basta multiplicar todas as coordenadas x por -1."
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 15 #"sobrancelha_dir"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"polygon"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"-5"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-15"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"15"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-35"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-15"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"-8"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 )"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 19 3 7 #"\"solid\""
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 19 3 7 #"\"black\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 36 #";esclera_dir_goku: n\303\272mero -> imagem"
0 0 25 29 1 #"\n"
0 0 17 3 53
#";Obj: Dado o valor da escala, a fun\303\247\303\243o retorna uma "
0 0 17 3 7 #"imagem "
0 0 17 11 15 #"correspondente "
0 0 17 3 2 #"a "
0 0 17 3 8 #"somente "
0 0 17 3 3 #"\303\240 "
0 0 17 3 8 #"regi\303\243o "
0 0 17 3 7 #"branca "
0 0 17 3 3 #"do "
0 0 17 3 5 #"olho "
0 0 17 3 16 #"direito do goku."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 5 #";Ex.:"
0 0 25 29 1 #"\n"
0 0 17 3 24 #";(esclera_dir_goku 3) = "
0 6           4 17 238
(26
 #"(#(struct:translate 90 -60 #(struct:polygon (#(struct:pulled-point 0"
 #" 0 -36 60 0 0) #(struct:pulled-point 0 0 -90 84 0 0) #(struct:pulled"
 #"-point 0 0 -84 105 0 0) #(struct:p"
 #"ulled-point 0 0 -45 99 0 0)) 255 \"white\")) #(struct:bb 54 45 45) #"
 #"f)"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 16 #"esclera_dir_goku"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"polygon"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-12"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-30"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"28"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-28"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"35"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-15"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"33"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 19 3 7 #"\"solid\""
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 19 3 7 #"\"white\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 33 #";olho_dir_goku: n\303\272mero -> imagem"
0 0 25 29 1 #"\n"
0 0 17 3 53
#";Obj: Dado o valor da escala, a fun\303\247\303\243o retorna uma "
0 0 17 3 7 #"imagem "
0 0 17 11 15 #"correspondente "
0 0 17 3 3 #"ao "
0 0 17 3 5 #"olho "
0 0 17 3 16 #"direito do goku."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 5 #";Ex.:"
0 0 25 29 1 #"\n"
0 0 17 3 21 #";(olho_dir_goku 3) = "
0 6           4 17 689
(27
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:translate 105 -30 "
 #"#(struct:polygon (#(struct:pulled-point 0 0 -15 30 0 0) #(struct:pul"
 #"led-point 0 0 -45 45 0 0) #(struct:pulled-point 0 0 -105 90 0 0) #(s"
 #"truct:pulled-point 0 0 -45 60 0 0) #(struct:pulled-point 0 0 -24 60 "
 #"0 0)) 255 \"black\"))) #(struct:translate 6 30 #(struct:overlay #(st"
 #"ruct:translate 6 15 #(struct:translate 15/2 12 #(struct:ellipse 15 2"
 #"4 0 255 \"black\"))) #(struct:translate 0 0 #(struct:translate 90 -6"
 #"0 #(struct:polygon (#(struct:pulled-point 0 0 -36 60 0 0) #(struct:p"
 #"ulled-point 0 0 -90 84 0 0) #(struct:pulled-point 0 0 -84 105 0 0) #"
 #"(struct:pulled-point 0 0 -45 99 0 0)) 255 \"white\")))))) #(struct:b"
 #"b 90 75 75) #f)"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"olho_dir_goku"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"overlay/xy"
0 0 25 3 2 #" ("
0 0 14 3 15 #"sobrancelha_dir"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 10 #"overlay/xy"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 7 #"ellipse"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 25 3 1 #" "
0 0 19 3 7 #"\"black\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"-2"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"-5"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 16 #"esclera_dir_goku"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 25 #";rosto: n\303\272mero -> imagem"
0 0 25 29 1 #"\n"
0 0 17 3 53
#";Obj: Dado o valor da escala, a fun\303\247\303\243o retorna uma "
0 0 17 3 7 #"imagem "
0 0 17 11 15 #"correspondente "
0 0 17 3 3 #"ao "
0 0 17 3 6 #"rosto "
0 0 17 3 3 #"do "
0 0 17 3 5 #"goku "
0 0 17 3 19 #"sem nenhum detalhe."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 5 #";Ex.:"
0 0 25 29 1 #"\n"
0 0 17 3 15 #";(rosto 0.8) = "
0 6           4 17 268
(28
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 80 0 0 0) #(struct:pulled-point 0"
 #" 0 64 40 0 0) #(struct:pulled-point 0 0 40 56 0 0) #(struct:pulled-p"
 #"oint 0 0 16 40 0 0)) 255 \"burlywood\")) #(struct:bb 80 56 56) #f)"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 5 #"rosto"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"polygon"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"80"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"70"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 11 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 20 #")))                 "
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 19 3 7 #"\"solid\""
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 19 3 11 #"\"burlywood\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";nariz_goku: n\303\272mero -> imagem"
0 0 25 29 1 #"\n"
0 0 17 3 53
#";Obj: Dado o valor da escala, a fun\303\247\303\243o retorna uma "
0 0 17 3 7 #"imagem "
0 0 17 11 15 #"correspondente "
0 0 17 3 3 #"ao "
0 0 17 3 14 #"nariz do goku."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 5 #";Ex.:"
0 0 25 29 1 #"\n"
0 0 17 3 18 #";(nariz_goku 4) = "
0 6           4 17 190
(29
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 12 24 0 0) #(struct:pulled-point "
 #"0 0 0 32 0 0)) 255 \"brown\")) #(struct:bb 12 32 32) #f)"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"nariz_goku"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"polygon"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"6"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"8"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 )"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 19 3 7 #"\"solid\""
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 19 3 7 #"\"brown\""
0 0 25 29 1 #"\n"
0 0 25 3 13 #"           ))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 29 #";boca_goku: n\303\272mero -> imagem"
0 0 25 29 1 #"\n"
0 0 17 3 53
#";Obj: Dado o valor da escala, a fun\303\247\303\243o retorna uma "
0 0 17 3 7 #"imagem "
0 0 17 11 15 #"correspondente "
0 0 17 3 3 #"\303\240 "
0 0 17 3 13 #"boca do goku."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 5 #";Ex.:"
0 0 25 29 1 #"\n"
0 0 17 3 17 #";(boca_goku 4) = "
0 6           4 17 186
(30
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 40 0 0 0) #(struct:pulled-point 0"
 #" 0 0 4 0 0)) 255 \"black\")) #(struct:bb 40 4 4) #f)"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"boca_goku"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"polygon"
0 0 25 3 2 #" ("
0 0 14 3 4 #"list"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 9 #"make-posn"
0 0 25 3 2 #" ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 19 3 7 #"\"solid\""
0 0 25 29 1 #"\n"
0 0 25 3 11 #"           "
0 0 19 3 7 #"\"black\""
0 0 25 3 3 #") )"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";rosto_goku: n\303\272mero -> imagem"
0 0 25 29 1 #"\n"
0 0 17 3 53
#";Obj: Dado o valor da escala, a fun\303\247\303\243o retorna uma "
0 0 17 3 7 #"imagem "
0 0 17 11 15 #"correspondente "
0 0 17 3 3 #"ao "
0 0 17 3 6 #"rosto "
0 0 17 3 3 #"do "
0 0 17 3 5 #"goku "
0 0 17 3 4 #"com "
0 0 17 3 2 #"a "
0 0 17 3 5 #"boca "
0 0 17 3 10 #"e o nariz."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 5 #";Ex.:"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 19 #"(rosto_goku 0.8) = "
0 6           4 17 740
(31
 #"(#(struct:overlay #(struct:translate 40 36 #(struct:translate 0 0 #("
 #"struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-p"
 #"oint 0 0 12/5 24/5 0 0) #(struct:p"
 #"ulled-point 0 0 0 32/5 0 0)) 255 \"brown\"))) #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 188/5 44 #(struct:translate 0 0"
 #" #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulle"
 #"d-point 0 0 8 0 0 0) #(struct:pulled-point 0 0 0 4/5 0 0)) 255 \"bla"
 #"ck\"))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 80 "
 #"0 0 0) #(struct:pulled-point 0 0 64 40 0 0) #(struct:pulled-point 0 "
 #"0 40 56 0 0) #(struct:pulled-point 0 0 16 40 0 0)) 255 \"burlywood\""
 #")))))) #(struct:bb 80 56 56) #f)"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"rosto_goku"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"overlay/xy"
0 0 25 3 2 #" ("
0 0 14 3 10 #"nariz_goku"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-50"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-45"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 10 #"overlay/xy"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 9 #"boca_goku"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-47"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-55"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 5 #"rosto"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 29 #";face_goku: n\303\272mero -> imagem"
0 0 25 29 1 #"\n"
0 0 17 3 53
#";Obj: Dado o valor da escala, a fun\303\247\303\243o retorna uma "
0 0 17 3 7 #"imagem "
0 0 17 11 15 #"correspondente "
0 0 17 3 3 #"ao "
0 0 17 3 6 #"rosto "
0 0 17 3 3 #"do "
0 0 17 3 5 #"goku "
0 0 17 3 4 #"com "
0 0 17 3 2 #"a "
0 0 17 3 6 #"boca, "
0 0 17 3 2 #"o "
0 0 17 3 6 #"nariz "
0 0 17 3 11 #"e os olhos."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 5 #";Ex.:"
0 0 25 29 1 #"\n"
0 0 17 3 19 #";(face_goku 0.8) = "
0 6           4 17 2218
(32
 #"(#(struct:overlay #(struct:translate 212/5 16 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:translate 28 -8 #(struct:polygon (#(struc"
 #"t:pulled-point 0 0 -4 8 0 0) #(struct:pulled-point 0 0 -12 12 0 0) #"
 #"(struct:pulled-point 0 0 -28 24 0 0) #(struct:pulled-point 0 0 -12 1"
 #"6 0 0) #(struct:pulled-point 0 0 -32/5 16 0 0)) 255 \"black\"))) #(s"
 #"truct:translate 8/5 8 #(struct:overlay #(struct:translate 8/5 4 #(st"
 #"ruct:translate 2 16/5 #(struct:ellipse 4 32/5 0 255 \"black\"))) #(s"
 #"truct:translate 0 0 #(struct:translate 24 -16 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 -48/5 16 0 0) #(struct:pulled-point 0 0 -24 11"
 #"2/5 0 0) #(struct:pulled-point 0 0 -112/5 28 0 0) #(struct:pulled-po"
 #"int 0 0 -12 132/5 0 0)) 255 \"white\"))))))) #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 64/5 16 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:translate -4 -8 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 4 8 0 0) #(struct:pulled-point 0 0 12 12 0 0) #(str"
 #"uct:pulled-point 0 0 28 24 0 0) #(struct:pulled-point 0 0 12 16 0 0)"
 #" #(struct:pulled-point 0 0 32/5 16 0 0)) 255 \"black\"))) #(struct:t"
 #"ranslate 8 8 #(struct:overlay #(struct:translate 44/5 4 #(struct:tra"
 #"nslate 2 16/5 #(struct:ellipse 4 32/5 0 255 \"black\"))) #(struct:tr"
 #"anslate 0 0 #(struct:translate -48/5 -16 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 48/5 16 0 0) #(struct:pulled-point 0 0 24 112/5 0 0"
 #") #(struct:pulled-point 0 0 112/5 28 0 0) #(struct:pulled-point 0 0 "
 #"12 132/5 0 0)) 255 \"white\"))))))) #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 40 36 #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 1"
 #"2/5 24/5 0 0) #(struct:pulled-point 0 0 0 32/5 0 0)) 255 \"brown\"))"
 #") #(struct:translate 0 0 #(struct:overlay #(struct:translate 188/5 4"
 #"4 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 8 0 0 0) #(struct:pulled-point 0"
 #" 0 0 4/5 0 0)) 255 \"black\"))) #(struct:translate 0 0 #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 80 0 0 0) #(struct:pulled-point 0 0 64 40 0 0) "
 #"#(struct:pulled-point 0 0 40 56 0 0) #(struct:pulled-point 0 0 16 40"
 #" 0 0)) 255 \"burlywood\")))))))))) #(struct:bb 80 56 56) #f)"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 9 #"face_goku"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"overlay/xy"
0 0 25 3 2 #" ("
0 0 14 3 13 #"olho_dir_goku"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-53"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-20"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 10 #"overlay/xy"
0 0 25 3 2 #" ("
0 0 14 3 13 #"olho_esq_goku"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-16"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 3 #") ("
0 0 14 3 1 #"*"
0 0 25 3 1 #" "
0 0 22 3 3 #"-20"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 10 #"rosto_goku"
0 0 25 3 1 #" "
0 0 14 3 6 #"escala"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";; "
0 0 17 3 53 #"====================================================="
0 0 17 3 2 #"=="
0 0 17 3 2 #"=="
0 0 17 3 10 #"=========="
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 29 #";; DEFINI\303\207\303\203O DE CONSTANTES:"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"EMBLEMA1"
0 0 25 3 2 #" ("
0 0 14 3 9 #"sharingan"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #")) "
0 0 17 3 30 #";; Eternal mangekyou sharingan"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"EMBLEMA2"
0 0 25 3 2 #" ("
0 0 14 3 7 #"galinha"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #")) "
0 0 17 3 22 #";;Galinha amarela com "
0 0 17 3 7 #"crista "
0 0 17 11 7 #"e bico "
0 0 17 3 9 #"vermelhos"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"EMBLEMA3"
0 0 25 3 2 #" ("
0 0 14 3 4 #"olho"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.8"
0 0 25 3 3 #")) "
0 0 17 3 11 #";;Olho azul"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 8 #"EMBLEMA4"
0 0 25 3 2 #" ("
0 0 14 3 4 #"goku"
0 0 25 3 1 #" "
0 0 22 3 3 #"0.8"
0 0 25 3 3 #")) "
0 0 17 3 26 #";;Semelhante a um saiyajin"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 30 #";; DEFINI\303\207\303\203O DO TIPO EQUIPE:"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 6 #"equipe"
0 0 25 3 2 #" ("
0 0 14 3 4 #"nome"
0 0 25 3 1 #" "
0 0 14 3 7 #"tamanho"
0 0 25 3 1 #" "
0 0 14 3 7 #"emblema"
0 0 25 3 1 #" "
0 0 14 3 9 #"pontuacao"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 38 #";; Um elemento  do conjunto Equipe \303\251 "
0 0 25 29 1 #"\n"
0 0 17 3 69
(33
 #";; (make-equipe um-nome um-integrantes um-emblema uma-pontuacao) ond"
 #"e"
) 0 0 25 29 1 #"\n"
0 0 17 3 43 #";;     um-nome: String, \303\251 o nome da equipe"
0 0 25 29 1 #"\n"
0 0 17 3 69
(34
 #";;     um-integrantes: N\303\272mero, \303\251 o n\303\272mero de in"
 #"tegrantes da equipe"
) 0 0 25 29 1 #"\n"
0 0 17 3 49 #";;     um-emblema: Imagem, \303\251 o emblema da equipe"
0 0 25 29 1 #"\n"
0 0 17 3 63
(35
 #";;     uma-pontuacao: N\303\272mero, \303\251 o n\303\272mero de pon"
 #"tos da equipe"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";; "
0 0 17 3 62
#"=============================================================="
0 0 25 29 1 #"\n"
0 0 17 3 53 #";; 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 "
0 0 17 3 11 #"1 1 1 1 1 1"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";; "
0 0 17 3 62
#"=============================================================="
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"EQUIPE1"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-equipe"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"Uchiha\""
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 8 #"EMBLEMA1"
0 0 25 3 1 #" "
0 0 22 3 5 #"10000"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"EQUIPE2"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-equipe"
0 0 25 3 1 #" "
0 0 19 3 17 #"\"Pollos Hermanos\""
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 14 3 8 #"EMBLEMA2"
0 0 25 3 1 #" "
0 0 22 3 3 #"100"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"EQUIPE3"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-equipe"
0 0 25 3 1 #" "
0 0 19 3 11 #"\"Vigilants\""
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 14 3 8 #"EMBLEMA3"
0 0 25 3 1 #" "
0 0 22 3 2 #"98"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 7 #"EQUIPE4"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-equipe"
0 0 25 3 1 #" "
0 0 19 3 11 #"\"Saiyajins\""
0 0 25 3 1 #" "
0 0 22 3 1 #"5"
0 0 25 3 1 #" "
0 0 14 3 8 #"EMBLEMA4"
0 0 25 3 1 #" "
0 0 22 3 5 #"10000"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";; "
0 0 17 3 62
#"=============================================================="
0 0 25 29 1 #"\n"
0 0 17 3 53 #";; 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 "
0 0 17 3 12 #"2 2 2 2 2 2 "
0 0 25 29 1 #"\n"
0 0 17 3 3 #";; "
0 0 17 3 62
#"=============================================================="
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 38 #";maior-equipe: equipe equipe -> equipe"
0 0 25 29 1 #"\n"
0 0 17 3 52
#";Obj: Dadas duas equipes, a fun\303\247\303\243o retorna aquela "
0 0 17 3 4 #"com "
0 0 17 3 2 #"a "
0 0 17 3 6 #"maior "
0 0 17 11 11 #"quantidade "
0 0 17 3 11 #"de membros."
0 0 25 29 1 #"\n"
0 0 17 3 54
#";Caso o n\303\272mero de membros seja id\303\252ntico em ambas, a "
0 0 17 3 9 #"fun\303\247\303\243o "
0 0 17 3 8 #"retorna "
0 0 17 11 3 #"um "
0 0 17 3 15 #"conjunto vazio."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 9 #";Exemplo:"
0 0 25 29 1 #"\n"
0 0 17 3 41 #";(maior-equipe EQUIPE1 EQUIPE2) = EQUIPE2"
0 0 25 29 1 #"\n"
0 0 17 3 37 #";(maior-equipe EQUIPE1 EQUIPE1) = '()"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"maior-equipe"
0 0 25 3 1 #" "
0 0 14 3 7 #"EQUIPE1"
0 0 25 3 1 #" "
0 0 14 3 7 #"EQUIPE2"
0 0 25 3 2 #") "
0 0 14 3 7 #"EQUIPE2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"maior-equipe"
0 0 25 3 1 #" "
0 0 14 3 7 #"EQUIPE3"
0 0 25 3 1 #" "
0 0 14 3 7 #"EQUIPE2"
0 0 25 3 2 #") "
0 0 14 3 7 #"EQUIPE3"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"maior-equipe"
0 0 25 3 1 #" "
0 0 14 3 7 #"EQUIPE2"
0 0 25 3 1 #" "
0 0 14 3 7 #"EQUIPE2"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"maior-equipe"
0 0 25 3 1 #" "
0 0 14 3 7 #"equipe1"
0 0 25 3 1 #" "
0 0 14 3 7 #"equipe2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 14 #"equipe-tamanho"
0 0 25 3 1 #" "
0 0 14 3 7 #"equipe1"
0 0 25 3 3 #") ("
0 0 14 3 14 #"equipe-tamanho"
0 0 25 3 1 #" "
0 0 14 3 7 #"equipe2"
0 0 25 3 4 #") ) "
0 0 14 3 4 #"null"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       [("
0 0 14 3 1 #">"
0 0 25 3 2 #" ("
0 0 14 3 14 #"equipe-tamanho"
0 0 25 3 1 #" "
0 0 14 3 7 #"equipe1"
0 0 25 3 3 #") ("
0 0 14 3 14 #"equipe-tamanho"
0 0 25 3 1 #" "
0 0 14 3 7 #"equipe2"
0 0 25 3 4 #") ) "
0 0 14 3 7 #"equipe1"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 14 3 7 #"equipe2"
0 0 25 3 2 #"])"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    )"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  )"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";; "
0 0 17 3 62
#"=============================================================="
0 0 25 29 1 #"\n"
0 0 17 3 53 #";; 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 "
0 0 17 3 11 #"3 3 3 3 3 3"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";; "
0 0 17 3 62
#"=============================================================="
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 43 #";nome-maior-equipe: equipe equipe -> string"
0 0 25 29 1 #"\n"
0 0 17 3 52
#";Obj: Dadas duas equipes, a fun\303\247\303\243o retorna o nome "
0 0 17 3 8 #"daquela "
0 0 17 3 4 #"com "
0 0 17 3 2 #"a "
0 0 17 11 6 #"maior "
0 0 17 3 22 #"quantidade de membros."
0 0 25 29 1 #"\n"
0 0 17 3 54
#";Caso o n\303\272mero de membros seja id\303\252ntico em ambas, a "
0 0 17 3 9 #"fun\303\247\303\243o "
0 0 17 3 8 #"retorna "
0 0 17 11 3 #"um "
0 0 17 3 15 #"conjunto vazio."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 9 #";Exemplo:"
0 0 25 29 1 #"\n"
0 0 17 3 56
#";(nome-maior-equipe EQUIPE1 EQUIPE2) = \"Pollos Hermanos\""
0 0 25 29 1 #"\n"
0 0 17 3 42 #";(nome-maior-equipe EQUIPE1 EQUIPE1) = '()"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 17 #"nome-maior-equipe"
0 0 25 3 1 #" "
0 0 14 3 7 #"EQUIPE1"
0 0 25 3 1 #" "
0 0 14 3 7 #"EQUIPE2"
0 0 25 3 2 #") "
0 0 19 3 17 #"\"Pollos Hermanos\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 17 #"nome-maior-equipe"
0 0 25 3 1 #" "
0 0 14 3 7 #"EQUIPE3"
0 0 25 3 1 #" "
0 0 14 3 7 #"EQUIPE2"
0 0 25 3 2 #") "
0 0 19 3 11 #"\"Vigilants\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 17 #"nome-maior-equipe"
0 0 25 3 1 #" "
0 0 14 3 7 #"EQUIPE2"
0 0 25 3 1 #" "
0 0 14 3 7 #"EQUIPE2"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 3 #"())"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 17 #"nome-maior-equipe"
0 0 25 3 1 #" "
0 0 14 3 7 #"equipe1"
0 0 25 3 1 #" "
0 0 14 3 7 #"equipe2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 25 3 2 #" ("
0 0 14 3 12 #"maior-equipe"
0 0 25 3 1 #" "
0 0 14 3 7 #"equipe1"
0 0 25 3 1 #" "
0 0 14 3 7 #"equipe2"
0 0 25 3 3 #")) "
0 0 14 3 4 #"null"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 11 #"equipe-nome"
0 0 25 3 2 #" ("
0 0 14 3 12 #"maior-equipe"
0 0 25 3 1 #" "
0 0 14 3 7 #"equipe1"
0 0 25 3 1 #" "
0 0 14 3 7 #"equipe2"
0 0 25 3 5 #"))]))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";; "
0 0 17 3 62
#"=============================================================="
0 0 25 29 1 #"\n"
0 0 17 3 53 #";; 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 "
0 0 17 3 12 #"4 4 4 4 4 4 "
0 0 25 29 1 #"\n"
0 0 17 3 3 #";; "
0 0 17 3 62
#"=============================================================="
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 23 #";A diferen\303\247a entre as "
0 0 17 3 10 #"fun\303\247\303\265es "
0 0 17 3 15 #"(maior-equipe) "
0 0 17 3 2 #"e "
0 0 17 3 20 #"(nome-maior-equipe) "
0 0 17 11 6 #"est\303\241 "
0 0 17 3 3 #"no "
0 0 17 3 5 #"fato "
0 0 17 3 3 #"de "
0 0 17 3 5 #"elas "
0 0 17 3 8 #"fazerem "
0 0 17 3 7 #"coisas "
0 0 17 3 4 #"bem "
0 0 17 3 12 #"diferentes. "
0 0 17 3 5 #"N\303\243o "
0 0 17 3 10 #"considero "
0 0 17 3 4 #"que "
0 0 17 3 4 #"h\303\241 "
0 0 17 11 5 #"como "
0 0 17 3 9 #"comparar "
0 0 17 3 3 #"as "
0 0 17 3 5 #"duas "
0 0 17 3 3 #"de "
0 0 17 3 6 #"forma "
0 0 17 3 5 #"t\303\243o "
0 0 17 3 11 #"gen\303\251rica, "
0 0 17 3 3 #"na "
0 0 17 3 9 #"verdade. "
0 0 17 3 6 #"Seria "
0 0 17 3 5 #"mais "
0 0 17 11 7 #"f\303\241cil "
0 0 17 3 6 #"dizer "
0 0 17 3 2 #"o "
0 0 17 3 4 #"que "
0 0 17 3 5 #"elas "
0 0 17 3 5 #"t\303\252m "
0 0 17 3 3 #"de "
0 0 17 3 12 #"semelhante, "
0 0 17 3 12 #"que s\303\243o os "
0 0 17 3 15 #"argumentos, no "
0 0 17 11 8 #"caso, e "
0 0 17 3 10 #"nada mais."
0 0 25 29 1 #"\n"
0 0 17 3 25 #";Mas isso \303\251 o mesmo que "
0 0 17 3 11 #"comparar a "
0 0 17 3 9 #"fun\303\247\303\243o "
0 0 17 3 7 #"coseno "
0 0 17 3 4 #"com "
0 0 17 3 2 #"a "
0 0 17 3 11 #"par\303\241bola, "
0 0 17 11 5 #"dado "
0 0 17 3 4 #"que "
0 0 17 3 6 #"ambas "
0 0 17 3 5 #"t\303\252m "
0 0 17 3 9 #"dom\303\255nio "
0 0 17 3 6 #"sobre "
0 0 17 3 3 #"os "
0 0 17 3 7 #"Reais. "
0 0 17 3 6 #"(Bom, "
0 0 17 3 3 #"\303\251 "
0 0 17 3 10 #"poss\303\255vel "
0 0 17 3 9 #"expandir "
0 0 17 11 2 #"o "
0 0 17 3 11 #"cosseno em "
0 0 17 3 7 #"s\303\251rie "
0 0 17 3 2 #"e "
0 0 17 3 8 #"haver\303\241 "
0 0 17 3 3 #"um "
0 0 17 3 6 #"termo "
0 0 17 3 13 #"quadr\303\241tico, "
0 0 17 3 4 #"mas "
0 0 17 3 5 #"n\303\243o "
0 0 17 3 3 #"\303\251 "
0 0 17 3 6 #"disso "
0 0 17 11 4 #"que "
0 0 17 3 22 #"estamos falando aqui)."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 20 #";De qualquer forma: "
0 0 17 3 15 #"(maior-equipe) "
0 0 17 3 8 #"retorna "
0 0 17 3 3 #"um "
0 0 17 3 7 #"objeto "
0 0 17 3 3 #"do "
0 0 17 3 5 #"tipo "
0 0 17 11 8 #"equipe, "
0 0 17 3 9 #"enquanto "
0 0 17 3 4 #"que "
0 0 17 3 20 #"(nome-maior-equipe) "
0 0 17 3 8 #"retorna "
0 0 17 3 4 #"uma "
0 0 17 3 8 #"string, "
0 0 17 3 4 #"que "
0 0 17 3 4 #"vem "
0 0 17 3 2 #"a "
0 0 17 3 4 #"ser "
0 0 17 11 3 #"um "
0 0 17 3 12 #"atributo de "
0 0 17 3 3 #"um "
0 0 17 3 22 #"objeto do tipo equipe."
0 0 25 29 1 #"\n"
0 0 17 3 26 #";Talvez essa fosse alguma "
0 0 17 3 10 #"poss\303\255vel "
0 0 17 3 11 #"confus\303\243o: "
0 0 17 3 4 #"uma "
0 0 17 3 7 #"equipe "
0 0 17 3 5 #"n\303\243o "
0 0 17 3 3 #"\303\251 "
0 0 17 3 5 #"dada "
0 0 17 11 5 #"pelo "
0 0 17 3 5 #"nome "
0 0 17 3 3 #"da "
0 0 17 3 8 #"equipe, "
0 0 17 3 3 #"do "
0 0 17 3 5 #"tipo "
0 0 17 3 8 #"string, "
0 0 17 3 5 #"mas, "
0 0 17 3 25 #"sim, por um tipo equipe. "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";; "
0 0 17 3 62
#"=============================================================="
0 0 25 29 1 #"\n"
0 0 17 3 53 #";; 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 "
0 0 17 3 2 #"5 "
0 0 17 3 11 #"5 5 5 5 5 5"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";; "
0 0 17 3 62
#"=============================================================="
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 44 #";aumenta-pontuacao: equipe n\303\272mero -> equipe"
0 0 25 29 1 #"\n"
0 0 17 3 52
(36
 #";Obj: Dada uma equipe e u"
 #"ma pontua\303\247\303\243o, a fun\303\247\303\243o "
) 0 0 17 3 8 #"retorna "
0 0 17 3 2 #"a "
0 0 17 3 7 #"equipe "
0 0 17 3 4 #"com "
0 0 17 11 3 #"os "
0 0 17 3 7 #"pontos "
0 0 17 3 11 #"acrescidos "
0 0 17 3 14 #"do valor dado."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 9 #";Exemplo:"
0 0 25 29 1 #"\n"
0 0 17 3 19 #";(aumenta-pontuacao"
0 0 17 3 1 #" "
0 0 17 3 12 #"EQUIPE1 10) "
0 0 17 3 3 #"= ("
0 0 17 3 11 #"make-equipe"
0 0 17 3 1 #" "
0 0 17 3 8 #"\"Uchiha\""
0 0 17 3 1 #" "
0 0 17 3 2 #"1 "
0 6           4 17 2646 9 0 0 17 3 7 #" 10010)"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 17 #"aumenta-pontuacao"
0 0 25 3 1 #" "
0 0 14 3 7 #"EQUIPE1"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 3 #") ("
0 0 14 3 11 #"make-equipe"
0 0 25 3 1 #" "
0 0 19 3 8 #"\"Uchiha\""
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 11 1 #" "
0 6           4 22 2646 9 0 0 25 3 1 #" "
0 0 22 3 5 #"10010"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 17 #"aumenta-pontuacao"
0 0 25 3 1 #" "
0 0 14 3 7 #"EQUIPE3"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 3 #") ("
0 0 14 3 11 #"make-equipe"
0 0 25 3 1 #" "
0 0 19 3 11 #"\"Vigilants\""
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 11 1 #" "
0 6           4 22 1056
(37
 #"(#(struct:overlay #(struct:translate 52/5 52/5 #(struct:overlay #(st"
 #"ruct:translate 32 32 #(struct:translate 12/5 12/5 #(struct:ellipse 2"
 #"4/5 24/5 0 255 \"white\"))) #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 8 0 #(struct:translate 8 8 #(struct:ellipse 16 16"
 #" 0 255 \"white\"))) #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 8/5 8/5 #(struct:overlay #(struct:translate 8 8 #(struct:"
 #"overlay #(struct:translate 16/5 16/5 #(struct:translate 64/5 64/5 #("
 #"struct:ellipse 128/5 128/5 0 outline \"brown\"))) #(struct:translate"
 #" 0 0 #(struct:translate 16 16 #(struct:ellipse 32 32 0 255 \"black\""
 #"))))) #(struct:translate 0 0 #(struct:translate 24 24 #(struct:ellip"
 #"se 48 48 0 255 \"cyan\"))))) #(struct:translate 0 0 #(struct:transla"
 #"te 128/5 128/5 #(struct:ellipse 256/5 256/5 0 255 \"seagreen\"))))))"
 #"))) #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:translate 36 36 #(struct:ellipse 72 72 0 255 \"white\"))) #("
 #"struct:translate 0 0 #(struct:translate 36 36 #(struct:ellipse 72 72"
 #" 0 outline \"black\")))))) #(struct:bb 72 72 72) #f)"
) 0 0 25 3 1 #" "
0 0 22 3 3 #"148"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 17 #"aumenta-pontuacao"
0 0 25 3 1 #" "
0 0 14 3 6 #"equipe"
0 0 25 3 1 #" "
0 0 14 3 6 #"pontos"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 11 #"make-equipe"
0 0 25 3 2 #" ("
0 0 14 3 11 #"equipe-nome"
0 0 25 3 1 #" "
0 0 14 3 6 #"equipe"
0 0 25 3 3 #") ("
0 0 14 3 14 #"equipe-tamanho"
0 0 25 3 1 #" "
0 0 14 3 6 #"equipe"
0 0 25 11 2 #") "
0 0 25 3 1 #"("
0 0 14 3 14 #"equipe-emblema"
0 0 25 3 1 #" "
0 0 14 3 6 #"equipe"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 2 #" ("
0 0 14 3 16 #"equipe-pontuacao"
0 0 25 3 1 #" "
0 0 14 3 6 #"equipe"
0 0 25 3 2 #") "
0 0 14 3 6 #"pontos"
0 0 25 3 3 #") )"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  )"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";; "
0 0 17 3 62
#"=============================================================="
0 0 25 29 1 #"\n"
0 0 17 3 53 #";; 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 "
0 0 17 3 11 #"6 6 6 6 6 6"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";; "
0 0 17 3 62
#"=============================================================="
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 25 3 1 #" "
0 0 14 3 9 #"confronto"
0 0 25 3 2 #" ("
0 0 14 3 13 #"identificacao"
0 0 25 3 1 #" "
0 0 14 3 7 #"equipe1"
0 0 25 3 1 #" "
0 0 14 3 7 #"equipe2"
0 0 25 3 1 #" "
0 0 14 3 9 #"premiacao"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 17 3 41 #";; Um elemento  do conjunto confronto \303\251 "
0 0 25 29 1 #"\n"
0 0 17 3 48 #";; (make-confronto uma-identificacao uma-equipe "
0 0 17 11 11 #"uma-equipe "
0 0 17 3 19 #"uma-premiacao) onde"
0 0 25 29 1 #"\n"
0 0 17 3 68
(38
 #";;     uma-identificacao: "
 #"n\303\272mero, \303\251 a identifica\303\247\303\243o do confronto"
) 0 0 25 29 1 #"\n"
0 0 17 3 59
(39
 #";;     uma-equipe: Equipe, \303\251 uma inst\303\242ncia do tipo Equ"
 #"ipe"
) 0 0 25 29 1 #"\n"
0 0 17 3 59 39 0 0 25 29 1 #"\n"
0 0 17 3 54
(40
 #";;     uma-premiacao: N\303\272mero, \303\251 o n\303\272mero de pon"
 #"tos "
) 0 0 17 3 4 #"que "
0 0 17 3 2 #"o "
0 0 17 3 9 #"vencedor "
0 0 17 11 7 #"recebe "
0 0 17 3 17 #"ap\303\263s o confronto"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"CONFRONTO1"
0 0 25 3 2 #" ("
0 0 14 3 14 #"make-confronto"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 7 #"EQUIPE1"
0 0 25 3 1 #" "
0 0 14 3 7 #"EQUIPE2"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"CONFRONTO2"
0 0 25 3 2 #" ("
0 0 14 3 14 #"make-confronto"
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 14 3 7 #"EQUIPE1"
0 0 25 3 1 #" "
0 0 14 3 7 #"EQUIPE4"
0 0 25 3 1 #" "
0 0 22 3 2 #"50"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"CONFRONTO3"
0 0 25 3 2 #" ("
0 0 14 3 14 #"make-confronto"
0 0 25 3 1 #" "
0 0 22 3 1 #"3"
0 0 25 3 1 #" "
0 0 14 3 7 #"EQUIPE3"
0 0 25 3 1 #" "
0 0 14 3 7 #"EQUIPE4"
0 0 25 3 1 #" "
0 0 22 3 2 #"30"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"CONFRONTO4"
0 0 25 3 2 #" ("
0 0 14 3 14 #"make-confronto"
0 0 25 3 1 #" "
0 0 22 3 1 #"4"
0 0 25 3 1 #" "
0 0 14 3 7 #"EQUIPE4"
0 0 25 3 1 #" "
0 0 14 3 7 #"EQUIPE1"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";; "
0 0 17 3 62
#"=============================================================="
0 0 25 29 1 #"\n"
0 0 17 3 53 #";; 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 "
0 0 17 3 12 #"7 7 7 7 7 7 "
0 0 25 29 1 #"\n"
0 0 17 3 3 #";; "
0 0 17 3 62
#"=============================================================="
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 52 #";emblema-maior-equipe: confronto confronto -> imagem"
0 0 25 29 1 #"\n"
0 0 17 3 50
#";Obj: Dados dois confrontos, a fun\303\247\303\243o retorna o "
0 0 17 3 8 #"emblema "
0 0 17 3 8 #"daquela "
0 0 17 3 4 #"com "
0 0 17 11 2 #"a "
0 0 17 3 6 #"maior "
0 0 17 3 11 #"quantidade "
0 0 17 3 3 #"de "
0 0 17 3 8 #"membros "
0 0 17 3 26 #"entre todas as envolvidas."
0 0 25 29 1 #"\n"
0 0 17 3 52 #";Caso haja empate em qualquer etapa, os emblemas de "
0 0 17 3 6 #"todos "
0 0 17 3 3 #"os "
0 0 17 11 11 #"empatantes "
0 0 17 3 15 #"ser\303\241 mostrado."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 9 #";Exemplo:"
0 0 25 29 1 #"\n"
0 0 17 3 48 #";(emblema-maior-equipe CONFRONTO1 CONFRONTO1) = "
0 6           4 17 1355
(41
 #"(#(struct:overlay #(struct:translate 0 0 #0=#(struct:translate 31.32"
 #"03125 0.0 #(struct:overlay #(struct:curve-segment #(struct:point 2 3"
 #"0) 5 -5 #(struct:point 2 45) 0 -1/10 solid \"red\") #(struct:overlay"
 #" #(struct:translate 0 8 #(struct:overlay #(struct:translate 10 15 #("
 #"struct:overlay #(struct:translate 3 3 #(struct:translate 5 5 #(struc"
 #"t:ellipse 10 10 0 255 \"black\"))) #(struct:translate 0 0 #(struct:t"
 #"ranslate 8 8 #(struct:ellipse 16 16 0 255 \"white\"))))) #(struct:tr"
 #"anslate 0 0 #(struct:translate 30 30 #(struct:ellipse 60 60 0 255 \""
 #"yellow\"))))) #(struct:translate 8 0 #(struct:translate 22.360679774"
 #"997905 61.55367074350507 #(struct:polygon (#(struct:pulled-point 0 0"
 #" 0 0 0 0) #(struct:pulled-point 0 0 42.36067977499789 -30.7768353717"
 #"52533 0 0) #(struct:pulled-point 0 0 0.0 -61.55367074350507 0 0) #(s"
 #"truct:pulled-point 0 0 -16.18033988749896 -11.75570504584947 0 0) #("
 #"struct:pulled-point 0 0 36.180339887498945 -11.755705045849464 0 0) "
 #"#(struct:pulled-point 0 0 20.0 -61.55367074350507 0 0) #(struct:pull"
 #"ed-point 0 0 -22.360679774997905 -30.776835371752544 0 0) #(struct:p"
 #"ulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 36.1803398874989"
 #"45 -49.797965697655606 0 0) #(struct:pulled-point 0 0 -16.1803398874"
 #"98953 -49.79796569765561 0 0)) 255 \"red\"))))))) #(struct:translate"
 #" 104.0416720499958 0.0 #0#)) #(struct:bb 208.0833440999916 68.0 68.0"
 #") #f)"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 20 #"emblema-maior-equipe"
0 0 25 3 1 #" "
0 0 14 3 10 #"CONFRONTO3"
0 0 25 3 1 #" "
0 0 14 3 10 #"CONFRONTO4"
0 0 25 3 3 #") ("
0 0 14 3 6 #"beside"
0 0 25 11 1 #" "
0 0 14 3 8 #"EMBLEMA4"
0 0 25 3 1 #" "
0 0 14 3 8 #"EMBLEMA4"
0 0 25 3 3 #") )"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 3 #"  ("
0 0 14 3 20 #"emblema-maior-equipe"
0 0 25 3 1 #" "
0 0 14 3 16 #"CONFRONTO_TESTE1"
0 0 25 3 1 #" "
0 0 14 3 16 #"CONFRONTO_TESTE2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 6           4 22 701
(42
 #"(#(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay"
 #" #(struct:overlay #(struct:overlay #(struct:overlay #(struct:transla"
 #"te 224/5 224/5 #(struct:ellipse 24/5 24/5 0 255 \"white\")) #(struct"
 #":translate 132/5 92/5 #(struct:ellipse 16 16 0 255 \"white\"))) #(st"
 #"ruct:translate 36 36 #(struct:ell"
 #"ipse 128/5 128/5 0 outline \"brown\"))) #(struct:translate 36 36 #(s"
 #"truct:ellipse 32 32 0 255 \"black\"))) #(struct:translate 36 36 #(st"
 #"ruct:ellipse 48 48 0 255 \"cyan\"))) #(struct:translate 36 36 #(stru"
 #"ct:ellipse 256/5 256/5 0 255 \"seagreen\"))) #(struct:translate 36 3"
 #"6 #(struct:ellipse 72 72 0 255 \"white\"))) #(struct:translate 36 36"
 #" #(struct:ellipse 72 72 0 outline \"black\"))) #(struct:bb 72 72 72)"
 #" #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 20 #"emblema-maior-equipe"
0 0 25 3 1 #" "
0 0 14 3 16 #"CONFRONTO_TESTE1"
0 0 25 3 1 #" "
0 0 14 3 16 #"CONFRONTO_TESTE3"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 6           4 22 7254
(43
 #"(#(struct:overlay #(struct:translate 0 29.0 #(struct:overlay #(struc"
 #"t:translate 17.020836024997898 0 #(struct:overlay #(struct:overlay #"
 #"(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #"
 #"(struct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #"
 #"(struct:overlay #(struct:overlay #(struct:translate 40 42 #(struct:e"
 #"llipse 4 4 0 255 \"white\")) #(struct:translate 19.280355596635292 1"
 #"9.28035559663529 #(struct:ellipse 8 25 45 255 \"white\"))) #(struct:"
 #"translate 35.0 35.0 #(struct:ellipse 6 6 0 255 \"red\"))) #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 32.57425083161329 30.6602540378443"
 #"86 0 0) #(struct:pulled-point 0 0 20.574250831613295 34.124355652982"
 #"14 0 0) #(struct:pulled-point 0 0 32.5742508316133 37.58845726811989"
 #"6 0 0) #(struct:pulled-point 0 0 41.5742508316133 46.24871130596428 "
 #"0 0) #(struct:pulled-point 0 0 38.5742508316133 34.12435565298214 0 "
 #"0) #(struct:pulled-point 0 0 41.5742508316133 22.0 0 0)) 255 \"black"
 #"\")) #(struct:translate 35.0 35.0 #(struct:ellipse 50 15 35 outline "
 #"\"black\"))) #(struct:translate 35.0 35.0 #(struct:ellipse 15 50 55 "
 #"outline \"black\"))) #(struct:translate 35.0 35.0 #(struct:ellipse 1"
 #"5 50 0 outline \"black\"))) #(struct:translate 35.0 35.0 #(struct:el"
 #"lipse 15 50 0 255 \"red\"))) #(struct:translate 35.0 35.0 #(struct:e"
 #"llipse 15 50 55 255 \"red\"))) #(struct:translate 35.0 35.0 #(struct"
 #":ellipse 50 15 35 255 \"red\"))) #(struct:translate 35 35 #(struct:e"
 #"llipse 56 56 0 outline \"red\"))) #(struct:translate 35 35 #(struct:"
 #"ellipse 56 56 0 255 \"black\"))) #(struct:translate 35 35 #(struct:e"
 #"llipse 70 70 0 255 \"white\")))) #(struct:translate 0 70.0 #(struct:"
 #"translate 31.3203125 0.0 #(struct:overlay #(struct:curve-segment #(s"
 #"truct:point 2 30) 5 -5 #(struct:point 2 45) 0 -1/10 solid \"red\") #"
 #"(struct:overlay #(struct:translate 0 8 #(struct:overlay #(struct:tra"
 #"nslate 10 15 #(struct:overlay #(struct:translate 3 3 #(struct:transl"
 #"ate 5 5 #(struct:ellipse 10 10 0 255 \"black\"))) #(struct:translate"
 #" 0 0 #(struct:translate 8 8 #(struct:ellipse 16 16 0 255 \"white\"))"
 #"))) #(struct:translate 0 0 #(struct:translate 30 30 #(struct:ellipse"
 #" 60 60 0 255 \"yellow\"))))) #(struct:translate 8 0 #(struct:transla"
 #"te 22.360679774997905 61.55367074350507 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 42.36067977499789"
 #" -30.776835371752533 0 0) #(struct:pulled-point 0 0 0.0 -61.55367074"
 #"350507 0 0) #(struct:pulled-point 0 0 -16.18033988749896 -11.7557050"
 #"4584947 0 0) #(struct:pulled-point 0 0 36.180339887498945 -11.755705"
 #"045849464 0 0) #(struct:pulled-point 0 0 20.0 -61.55367074350507 0 0"
 #") #(struct:pulled-point 0 0 -22.360679774997905 -30.776835371752544 "
 #"0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 3"
 #"6.180339887498945 -49.797965697655606 0 0) #(struct:pulled-point 0 0"
 #" -16.180339887498953 -49.79796569765561 0 0)) 255 \"red\"))))))))) #"
 #"(struct:translate 104.0416720499958 0 #(struct:overlay #(struct:tran"
 #"slate 24 0 #(struct:overlay #(struct:overlay #(struct:overlay #(stru"
 #"ct:overlay #(struct:overlay #(struct:overlay #(struct:overlay #(stru"
 #"ct:translate 224/5 224/5 #(struct:ellipse 24/5 24/5 0 255 \"white\")"
 #") #(struct:translate 132/5 92/5 #(struct:ellipse 16 16 0 255 \"white"
 #"\"))) #(struct:translate 36 36 #(struct:ellipse 128/5 128/5 0 outlin"
 #"e \"brown\"))) #(struct:translate 36 36 #(struct:ellipse 32 32 0 255"
 #" \"black\"))) #(struct:translate 36 36 #(struct:ellipse 48 48 0 255 "
 #"\"cyan\"))) #(struct:translate 36 36 #(struct:ellipse 256/5 256/5 0 "
 #"255 \"seagreen\"))) #(struct:translate 36 36 #(struct:ellipse 72 72 "
 #"0 255 \"white\"))) #(struct:translate 36 36 #(struct:ellipse 72 72 0"
 #" outline \"black\")))) #(struct:translate 0 72 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:translate 24 64 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 12/5 0 0 0) #(struct:pulled-point 0 0 0 8 0 0) #"
 #"(struct:pulled-point 0 0 44/5 32 0 0) #(struct:pulled-point 0 0 12 1"
 #"2 0 0) #(struct:pulled-point 0 0 16 36/5 0 0) #(struct:pulled-point "
 #"0 0 56/5 12 0 0) #(struct:pulled-point 0 0 16 40 0 0) #(struct:pulle"
 #"d-point 0 0 96/5 24 0 0) #(struct:pulled-point 0 0 32 12 0 0) #(stru"
 #"ct:pulled-point 0 0 236/5 24 0 0) #(struct:pulled-point 0 0 48 40 0 "
 #"0) #(struct:pulled-point 0 0 276/5 24 0 0) #(struct:pulled-point 0 0"
 #" 56 12 0 0) #(struct:pulled-point 0 0 292/5 16 0 0) #(struct:pulled-"
 #"point 0 0 56 28 0 0) #(struct:pulled-point 0 0 60 172/5 0 0) #(struc"
 #"t:pulled-point 0 0 292/5 28 0 0) #(struct:pulled-point 0 0 72 12 0 0"
 #") #(struct:pulled-point 0 0 68 16 0 0) #(struct:pulled-point 0 0 80 "
 #"24 0 0) #(struct:pulled-point 0 0 76 56/5 0 0) #(struct:pulled-point"
 #" 0 0 96 16 0 0) #(struct:pulled-point 0 0 80 0 0 0) #(struct:pulled-"
 #"point 0 0 96 -8 0 0) #(struct:pulled-point 0 0 80 -4 0 0) #(struct:p"
 #"ulled-point 0 0 76 -24 0 0) #(struct:pulled-point 0 0 64 -16 0 0) #("
 #"struct:pulled-point 0 0 40 -64 0 0) #(struct:pulled-point 0 0 24 -24"
 #" 0 0) #(struct:pulled-point 0 0 8 -32 0 0) #(struct:pulled-point 0 0"
 #" 8 -12 0 0) #(struct:pulled-point 0 0 0 -12 0 0) #(struct:pulled-poi"
 #"nt 0 0 -24 -4 0 0) #(struct:pulled-point 0 0 0 24 0 0)) 255 \"yellow"
 #"\"))) #(struct:translate 24 68 #(struct:overlay #(struct:translate 2"
 #"12/5 16 #(struct:overlay #(struct:translate 0 0 #(struct:translate 2"
 #"8 -8 #(struct:polygon (#(struct:pulled-point 0 0 -4 8 0 0) #(struct:"
 #"pulled-point 0 0 -12 12 0 0) #(struct:pulled-point 0 0 -28 24 0 0) #"
 #"(struct:pulled-point 0 0 -12 16 0 0) #(struct:pulled-point 0 0 -32/5"
 #" 16 0 0)) 255 \"black\"))) #(struct:translate 8/5 8 #(struct:overlay"
 #" #(struct:translate 8/5 4 #(struct:translate 2 16/5 #(struct:ellipse"
 #" 4 32/5 0 255 \"black\"))) #(struct:translate 0 0 #(struct:translate"
 #" 24 -16 #(struct:polygon (#(struct:pulled-point 0 0 -48/5 16 0 0) #("
 #"struct:pulled-point 0 0 -24 112/5 0 0) #(struct:pulled-point 0 0 -11"
 #"2/5 28 0 0) #(struct:pulled-point 0 0 -12 132/5 0 0)) 255 \"white\")"
 #")))))) #(struct:translate 0 0 #(struct:overlay #(struct:translate 64"
 #"/5 16 #(struct:overlay #(struct:translate 0 0 #(struct:translate -4 "
 #"-8 #(struct:polygon (#(struct:pulled-point 0 0 4 8 0 0) #(struct:pul"
 #"led-point 0 0 12 12 0 0) #(struct:pulled-point 0 0 28 24 0 0) #(stru"
 #"ct:pulled-point 0 0 12 16 0 0) #(struct:pulled-point 0 0 32/5 16 0 0"
 #")) 255 \"black\"))) #(struct:translate 8 8 #(struct:overlay #(struct"
 #":translate 44/5 4 #(struct:translate 2 16/5 #(struct:ellipse 4 32/5 "
 #"0 255 \"black\"))) #(struct:translate 0 0 #(struct:translate -48/5 -"
 #"16 #(struct:polygon (#(struct:pulled-point 0 0 48/5 16 0 0) #(struct"
 #":pulled-point 0 0 24 112/5 0 0) #(struct:pulled-point 0 0 112/5 28 0"
 #" 0) #(struct:pulled-point 0 0 12 132/5 0 0)) 255 \"white\"))))))) #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 40 36 #(str"
 #"uct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 "
 #"0) #(struct:pulled-point 0 0 12/5 24/5 0 0) #(struct:pulled-point 0 "
 #"0 0 32/5 0 0)) 255 \"brown\"))) #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 188/5 44 #(struct:translate 0 0 #(struct:poly"
 #"gon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 8 "
 #"0 0 0) #(struct:pulled-point 0 0 0 4/5 0 0)) 255 \"black\"))) #(stru"
 #"ct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 80 0 0 0) #(struc"
 #"t:pulled-point 0 0 64 40 0 0) #(struct:pulled-point 0 0 40 56 0 0) #"
 #"(struct:pulled-point 0 0 16 40 0 0)) 255 \"burlywood\"))))))))))))))"
 #")) #(struct:bb 224.04167204999578 196.0 196.0) #f)"
) 0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 53
#";As inst\303\242ncias de equipe e econfronto abaixo servem "
0 0 17 3 7 #"apenas "
0 0 17 3 5 #"para "
0 0 17 11 9 #"testar a "
0 0 17 3 9 #"fun\303\247\303\243o."
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 13 #"EQUIPE_TESTE1"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-equipe"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 8 #"EMBLEMA1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 13 #"EQUIPE_TESTE2"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-equipe"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 8 #"EMBLEMA2"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 13 #"EQUIPE_TESTE3"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-equipe"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 14 3 8 #"EMBLEMA3"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 13 #"EQUIPE_TESTE4"
0 0 25 3 2 #" ("
0 0 14 3 11 #"make-equipe"
0 0 25 3 1 #" "
0 0 19 3 3 #"\"D\""
0 0 25 3 1 #" "
0 0 22 3 1 #"2"
0 0 25 3 1 #" "
0 0 14 3 8 #"EMBLEMA4"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 16 #"CONFRONTO_TESTE1"
0 0 25 3 2 #" ("
0 0 14 3 14 #"make-confronto"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 2 #"  "
0 0 14 3 13 #"EQUIPE_TESTE1"
0 0 25 3 1 #" "
0 0 14 3 13 #"EQUIPE_TESTE2"
0 0 25 11 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 16 #"CONFRONTO_TESTE2"
0 0 25 3 2 #" ("
0 0 14 3 14 #"make-confronto"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 2 #"  "
0 0 14 3 13 #"EQUIPE_TESTE1"
0 0 25 3 1 #" "
0 0 14 3 13 #"EQUIPE_TESTE3"
0 0 25 11 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 16 #"CONFRONTO_TESTE3"
0 0 25 3 2 #" ("
0 0 14 3 14 #"make-confronto"
0 0 25 3 1 #" "
0 0 22 3 2 #"12"
0 0 25 3 2 #"  "
0 0 14 3 13 #"EQUIPE_TESTE3"
0 0 25 3 1 #" "
0 0 14 3 13 #"EQUIPE_TESTE4"
0 0 25 11 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 20 #"emblema-maior-equipe"
0 0 25 3 1 #" "
0 0 14 3 10 #"confronto1"
0 0 25 3 1 #" "
0 0 14 3 10 #"confronto2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 45 #";Caso aconte\303\247a empate no primeiro confronto."
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 25 3 2 #" ("
0 0 14 3 12 #"maior-equipe"
0 0 25 3 2 #" ("
0 0 14 3 17 #"confronto-equipe1"
0 0 25 3 1 #" "
0 0 14 3 10 #"confronto1"
0 0 25 11 2 #") "
0 0 25 3 1 #"("
0 0 14 3 17 #"confronto-equipe2"
0 0 25 3 1 #" "
0 0 14 3 10 #"confronto1"
0 0 25 3 9 #") ))     "
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"                "
0 0 17 3 52
#";Caso tamb\303\251m aconte\303\247a empate no segundo confronto,"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"                "
0 0 17 3 38 #";printa o emblema de todas as equipes."
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                [("
0 0 14 3 6 #"empty?"
0 0 25 3 2 #" ("
0 0 14 3 12 #"maior-equipe"
0 0 25 3 2 #" ("
0 0 14 3 17 #"confronto-equipe1"
0 0 25 3 1 #" "
0 0 14 3 10 #"confronto2"
0 0 25 11 2 #") "
0 0 25 3 1 #"("
0 0 14 3 17 #"confronto-equipe2"
0 0 25 3 1 #" "
0 0 14 3 10 #"confronto2"
0 0 25 3 4 #") ))"
0 0 25 29 1 #"\n"
0 0 25 3 26 #"                         ("
0 0 14 3 6 #"beside"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 5 #"above"
0 0 25 3 2 #" ("
0 0 14 3 14 #"equipe-emblema"
0 0 25 3 2 #" ("
0 0 14 3 17 #"confronto-equipe1"
0 0 25 11 1 #" "
0 0 14 3 10 #"confronto1"
0 0 25 3 4 #")) ("
0 0 14 3 14 #"equipe-emblema"
0 0 25 3 2 #" ("
0 0 14 3 17 #"confronto-equipe2"
0 0 25 3 1 #" "
0 0 14 3 10 #"confronto1"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 5 #"above"
0 0 25 3 2 #" ("
0 0 14 3 14 #"equipe-emblema"
0 0 25 3 2 #" ("
0 0 14 3 17 #"confronto-equipe1"
0 0 25 11 1 #" "
0 0 14 3 10 #"confronto2"
0 0 25 3 4 #")) ("
0 0 14 3 14 #"equipe-emblema"
0 0 25 3 2 #" ("
0 0 14 3 17 #"confronto-equipe2"
0 0 25 3 1 #" "
0 0 14 3 10 #"confronto2"
0 0 25 3 5 #"))))]"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"                "
0 0 17 3 38 #";Caso n\303\243o haja empate no confronto 2,"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"                "
0 0 17 3 49 #";Imprimeo emblema da maior equipe no confronto 2."
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ["
0 0 14 3 4 #"else"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 14 #"equipe-emblema"
0 0 25 3 2 #" ("
0 0 14 3 12 #"maior-equipe"
0 0 25 3 2 #" ("
0 0 14 3 17 #"confronto-equipe1"
0 0 25 11 1 #" "
0 0 14 3 10 #"confronto2"
0 0 25 3 4 #")  ("
0 0 14 3 17 #"confronto-equipe2"
0 0 25 3 1 #" "
0 0 14 3 10 #"confronto2"
0 0 25 3 8 #") ))] )]"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"    "
0 0 17 3 38 #";Caso n\303\243o haja empate no confronto 1."
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 25 3 5 #"     "
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"                "
0 0 17 3 33 #";Caso haja empate no confronto 2,"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"                "
0 0 17 3 46 #";Iprime eblema da maior equipe no confronto 1."
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                [("
0 0 14 3 6 #"empty?"
0 0 25 3 2 #" ("
0 0 14 3 12 #"maior-equipe"
0 0 25 3 2 #" ("
0 0 14 3 17 #"confronto-equipe1"
0 0 25 3 1 #" "
0 0 14 3 10 #"confronto2"
0 0 25 11 2 #") "
0 0 25 3 1 #"("
0 0 14 3 17 #"confronto-equipe2"
0 0 25 3 1 #" "
0 0 14 3 10 #"confronto2"
0 0 25 3 4 #") ))"
0 0 25 29 1 #"\n"
0 0 25 3 26 #"                         ("
0 0 14 3 14 #"equipe-emblema"
0 0 25 3 2 #" ("
0 0 14 3 12 #"maior-equipe"
0 0 25 11 1 #" "
0 0 25 3 1 #"("
0 0 14 3 17 #"confronto-equipe1"
0 0 25 3 1 #" "
0 0 14 3 10 #"confronto1"
0 0 25 3 3 #") ("
0 0 14 3 17 #"confronto-equipe2"
0 0 25 3 1 #" "
0 0 14 3 10 #"confronto1"
0 0 25 3 5 #") ))]"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"                "
0 0 17 3 38 #";Caso n\303\243o haja empate no confronto 2."
0 0 25 29 1 #"\n"
0 0 25 3 17 #"                ["
0 0 14 3 4 #"else"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                   "
0 0 17 11 47 #";Caso haja empate entre as maiores equipes dos "
0 0 17 3 11 #"confrontos "
0 0 17 3 6 #"1 e 2,"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                   "
0 0 17 3 33 #";Imprime os emblemas destas duas."
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                   [("
0 0 14 3 6 #"empty?"
0 0 25 3 2 #" ("
0 0 14 3 12 #"maior-equipe"
0 0 25 3 2 #" ("
0 0 14 3 12 #"maior-equipe"
0 0 25 11 1 #" "
0 0 25 3 1 #"("
0 0 14 3 17 #"confronto-equipe1"
0 0 25 3 1 #" "
0 0 14 3 10 #"confronto1"
0 0 25 3 3 #") ("
0 0 14 3 17 #"confronto-equipe2"
0 0 25 3 1 #" "
0 0 14 3 10 #"confronto1"
0 0 25 11 4 #") ) "
0 0 25 3 1 #"("
0 0 14 3 12 #"maior-equipe"
0 0 25 3 2 #" ("
0 0 14 3 17 #"confronto-equipe1"
0 0 25 3 1 #" "
0 0 14 3 10 #"confronto2"
0 0 25 3 3 #") ("
0 0 14 3 17 #"confronto-equipe2"
0 0 25 11 1 #" "
0 0 14 3 10 #"confronto2"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 6 #"beside"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 14 #"equipe-emblema"
0 0 25 3 2 #" ("
0 0 14 3 12 #"maior-equipe"
0 0 25 3 2 #" ("
0 0 14 3 17 #"confronto-equipe1"
0 0 25 11 1 #" "
0 0 14 3 10 #"confronto1"
0 0 25 3 3 #") ("
0 0 14 3 17 #"confronto-equipe2"
0 0 25 3 1 #" "
0 0 14 3 10 #"confronto1"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 14 3 14 #"equipe-emblema"
0 0 25 3 2 #" ("
0 0 14 3 12 #"maior-equipe"
0 0 25 3 2 #" ("
0 0 14 3 17 #"confronto-equipe1"
0 0 25 11 1 #" "
0 0 14 3 10 #"confronto2"
0 0 25 3 3 #") ("
0 0 14 3 17 #"confronto-equipe2"
0 0 25 3 1 #" "
0 0 14 3 10 #"confronto2"
0 0 25 3 5 #"))) )"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ]"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                   "
0 0 17 3 38 #";Caso n\303\243o haja nenhum tipo de empate,"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                   "
0 0 17 3 8 #";Imprime"
0 0 17 3 1 #" "
0 0 17 3 1 #"o"
0 0 17 3 1 #" "
0 0 17 3 7 #"emblema"
0 0 17 3 1 #" "
0 0 17 3 2 #"da"
0 0 17 3 1 #" "
0 0 17 3 5 #"maior"
0 0 17 3 1 #" "
0 0 17 3 6 #"equipe"
0 0 17 3 14 #" dentre todas."
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ["
0 0 14 3 4 #"else"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 14 3 14 #"equipe-emblema"
0 0 25 3 2 #" ("
0 0 14 3 12 #"maior-equipe"
0 0 25 3 2 #" ("
0 0 14 3 12 #"maior-equipe"
0 0 25 11 1 #" "
0 0 25 3 1 #"("
0 0 14 3 17 #"confronto-equipe1"
0 0 25 3 1 #" "
0 0 14 3 10 #"confronto1"
0 0 25 3 3 #") ("
0 0 14 3 17 #"confronto-equipe2"
0 0 25 3 1 #" "
0 0 14 3 10 #"confronto1"
0 0 25 3 3 #") )"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 12 #"maior-equipe"
0 0 25 3 2 #" ("
0 0 14 3 17 #"confronto-equipe1"
0 0 25 3 1 #" "
0 0 14 3 10 #"confronto2"
0 0 25 3 3 #") ("
0 0 14 3 17 #"confronto-equipe2"
0 0 25 11 1 #" "
0 0 14 3 10 #"confronto2"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                    ])"
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                     "
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                      ] )])"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  )"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";; "
0 0 17 3 62
#"=============================================================="
0 0 25 29 1 #"\n"
0 0 17 3 53 #";; 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 "
0 0 17 3 11 #"8 8 8 8 8 8"
0 0 25 29 1 #"\n"
0 0 17 3 3 #";; "
0 0 17 3 62
#"=============================================================="
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 32 #";mostra-equipe: equipe -> imagem"
0 0 25 29 1 #"\n"
0 0 17 11 73
(44
 #";Obj: Dada uma equipe, a fun\303\247\303\243o retorna uma imagem con"
 #"tendo todas suas "
) 0 0 17 3 14 #"informa\303\247\303\265es."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 9 #";Exemplo:"
0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 13 #"mostra-equipe"
0 0 17 3 1 #" "
0 0 17 3 11 #"EQUIPE1) = "
0 6           4 17 5950
(45
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:translate 7.0 10.5 #(struct:text \"U\" 0 1 \"green"
 #"\" 20 #f swiss normal normal #f))) #(struct:translate 14.0 0.0 #(str"
 #"uct:translate 5.0 10.5 #(struct:text \"c\" 0 1 \"green\" 20 #f swiss"
 #" normal normal #f))))) #(struct:translate 24.0 0.0 #(struct:translat"
 #"e 5.5 10.5 #(struct:text \"h\" 0 1 \"green\" 20 #f swiss normal norm"
 #"al #f))))) #(struct:translate 35.0 0.0 #(struct:translate 2.0 10.5 #"
 #"(struct:text \"i\" 0 1 \"green\" 20 #f swiss normal normal #f))))) #"
 #"(struct:translate 39.0 0.0 #(struct:translate 5.5 10.5 #(struct:text"
 #" \"h\" 0 1 \"green\" 20 #f swiss normal normal #f))))) #(struct:tran"
 #"slate 50.0 0.0 #(struct:translate"
 #" 5.5 10.5 #(struct:text \"a\" 0 1 \"green\" 20 #f swiss normal norma"
 #"l #f))))) #(struct:translate 0 22 #(struct:overlay #(struct:translat"
 #"e 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct"
 #":translate 7.5 9.5 #(struct:text \"M\" 0 1 \"green\" 18 #f swiss nor"
 #"mal normal #f))) #(struct:translate 15.0 0.0 #(struct:translate 5.0 "
 #"9.5 #(struct:text \"e\" 0 1 \"green\" 18 #f swiss normal normal #f))"
 #"))) #(struct:translate 25.0 0.0 #(struct:translate 7.5 9.5 #(struct:"
 #"text \"m\" 0 1 \"green\" 18 #f swiss normal normal #f))))) #(struct:"
 #"translate 40.0 0.0 #(struct:translate 5.0 9.5 #(struct:text \"b\" 0 "
 #"1 \"green\" 18 #f swiss normal normal #f))))) #(struct:translate 50."
 #"0 0.0 #(struct:translate 5.0 9.5 #(struct:text \"e\" 0 1 \"green\" 1"
 #"8 #f swiss normal normal #f))))) #(struct:translate 60.0 0.0 #(struc"
 #"t:translate 3.0 9.5 #(struct:text \"r\" 0 1 \"green\" 18 #f swiss no"
 #"rmal normal #f))))) #(struct:translate 66.0 0.0 #(struct:translate 4"
 #".5 9.5 #(struct:text \"s\" 0 1 \"green\" 18 #f swiss normal normal #"
 #"f))))) #(struct:translate 75.0 0.0 #(struct:translate 2.5 9.5 #(stru"
 #"ct:text \":\" 0 1 \"green\" 18 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 80.0 0.0 #(struct:translate 2.5 9.5 #(struct:text \" \""
 #" 0 1 \"green\" 18 #f swiss normal normal #f))))) #(struct:translate "
 #"85.0 0.0 #(struct:translate 5.0 "
 #"9.5 #(struct:text \"1\" 0 1 \"green\" 18 #f swiss normal normal #f))"
 #"))) #(struct:translate 0 20 #(struct:overlay #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:translate 6.0 9.5 #(str"
 #"uct:text \"S\" 0 1 \"green\" 18 #f swiss normal normal #f))) #(struc"
 #"t:translate 12.0 0.0 #(struct:translate 4.5 9.5 #(struct:text \"c\" "
 #"0 1 \"green\" 18 #f swiss normal normal #f))))) #(struct:translate 2"
 #"1.0 0.0 #(struct:translate 5.0 9.5 #(struct:text \"o\" 0 1 \"green\""
 #" 18 #f swiss normal normal #f))))) #(struct:translate 31.0 0.0 #(str"
 #"uct:translate 3.0 9.5 #(struct:text \"r\" 0 1 \"green\" 18 #f swiss "
 #"normal normal #f))))) #(struct:translate 37.0 0.0 #(struct:translate"
 #" 5.0 9.5 #(struct:text \"e\" 0 1 \"green\" 18 #f swiss normal normal"
 #" #f))))) #(struct:translate 47.0 0.0 #(struct:translate 2.5 9.5 #(st"
 #"ruct:text \":\" 0 1 \"green\" 18 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 52.0 0.0 #(struct:translate 2.5 9.5 #(struct:text \" "
 #"\" 0 1 \"green\" 18 #f swiss normal normal #f))))) #(struct:translat"
 #"e 57.0 0.0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:translate 5.0 9.5 #(stru"
 #"ct:text \"1\" 0 1 \"green\" 18 #f swiss normal normal #f))) #(struct"
 #":translate 10.0 0.0 #(struct:translate 5.0 9.5 #(struct:text \"0\" 0"
 #" 1 \"green\" 18 #f swiss normal normal #f))))) #(struct:translate 20"
 #".0 0.0 #(struct:translate 5.0 9.5 #(struct:text \"0\" 0 1 \"green\" "
 #"18 #f swiss normal normal #f))))) #(struct:translate 30.0 0.0 #(stru"
 #"ct:translate 5.0 9.5 #(struct:text \"0\" 0 1 \"green\" 18 #f swiss n"
 #"ormal normal #f))))) #(struct:translate 40.0 0.0 #(struct:translate "
 #"5.0 9.5 #(struct:text \"0\" 0 1 \"green\" 18 #f swiss normal normal "
 #"#f))))))))))) #(struct:translate 0 62 #(struct:overlay #(struct:over"
 #"lay #(struct:overlay #(struct:overlay #(struct:overlay #(struct:over"
 #"lay #(struct:overlay #(struct:overlay #(struct:overlay #(struct:over"
 #"lay #(struct:overlay #(struct:overlay #(struct:translate 40 42 #(str"
 #"uct:ellipse 4 4 0 255 \"white\")) #(struct:translate 19.280355596635"
 #"292 19.28035559663529 #(struct:ellipse 8 25 45 255 \"white\"))) #(st"
 #"ruct:translate 35.0 35.0 #(struct:ellipse 6 6 0 255 \"red\"))) #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 32.57425083161329 30.66025403"
 #"7844386 0 0) #(struct:pulled-point 0 0 20.574250831613295 34.1243556"
 #"5298214 0 0) #(struct:pulled-point 0 0 32.5742508316133 37.588457268"
 #"119896 0 0) #(struct:pulled-point 0 0 41.5742508316133 46.2487113059"
 #"6428 0 0) #(struct:pulled-point 0 0 38.5742508316133 34.124355652982"
 #"14 0 0) #(struct:pulled-point 0 0 41.5742508316133 22.0 0 0)) 255 \""
 #"black\")) #(struct:translate 35.0 35.0 #(struct:ellipse 50 15 35 out"
 #"line \"black\"))) #(struct:translate 35.0 35.0 #(struct:ellipse 15 5"
 #"0 55 outline \"black\"))) #(struct:translate 35.0 35.0 #(struct:elli"
 #"pse 15 50 0 outline \"black\"))) #(struct:translate 35.0 35.0 #(stru"
 #"ct:ellipse 15 50 0 255 \"red\"))) #(struct:translate 35.0 35.0 #(str"
 #"uct:ellipse 15 50 55 255 \"red\"))) #(struct:translate 35.0 35.0 #(s"
 #"truct:ellipse 50 15 35 255 \"red\"))) #(struct:translate 35 35 #(str"
 #"uct:ellipse 56 56 0 outline \"red\"))) #(struct:translate 35 35 #(st"
 #"ruct:ellipse 56 56 0 255 \"black\"))) #(struct:translate 35 35 #(str"
 #"uct:ellipse 70 70 0 255 \"white\"))))) #(struct:bb 107.0 132.0 132.0"
 #") #f)"
) 0 0 25 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 13 #"mostra-equipe"
0 0 17 3 1 #" "
0 0 17 3 11 #"EQUIPE2) = "
0 6           4 17 6826
(46
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ov"
 #"erlay #(struct:translate 0 0 #(struct:translate 6.5 10.5 #(struct:te"
 #"xt \"P\" 0 1 \"green\" 20 #f swiss normal normal #f))) #(struct:tran"
 #"slate 13.0 0.0 #(struct:translate"
 #" 5.5 10.5 #(struct:text \"o\" 0 1 \"green\" 20 #f swiss normal norma"
 #"l #f))))) #(struct:translate 24.0 0.0 #(struct:translate 2.0 10.5 #("
 #"struct:text \"l\" 0 1 \"green\" 20 #f swiss normal normal #f))))) #("
 #"struct:translate 28.0 0.0 #(struct:translate 2.0 10.5 #(struct:text "
 #"\"l\" 0 1 \"green\" 20 #f swiss normal normal #f))))) #(struct:trans"
 #"late 32.0 0.0 #(struct:translate 5.5 10.5 #(struct:text \"o\" 0 1 \""
 #"green\" 20 #f swiss normal normal #f))))) #(struct:translate 43.0 0."
 #"0 #(struct:translate 5.0 10.5 #(struct:text \"s\" 0 1 \"green\" 20 #"
 #"f swiss normal normal #f))))) #(struct:translate 53.0 0.0 #(struct:t"
 #"ranslate 3.0 10.5 #(struct:text \" \" 0 1 \"green\" 20 #f swiss norm"
 #"al normal #f))))) #(struct:translate 59.0 0.0 #(struct:translate 7.0"
 #" 10.5 #(struct:text \"H\" 0 1 \"green\" 20 #f swiss normal normal #f"
 #"))))) #(struct:translate 73.0 0.0 #(struct:translate 5.5 10.5 #(stru"
 #"ct:text \"e\" 0 1 \"green\" 20 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 84.0 0.0 #(struct:tr"
 #"anslate 3.5 10.5 #(struct:text \"r\" 0 1 \"green\" 20 #f swiss norma"
 #"l normal #f))))) #(struct:translate 91.0 0.0 #(struct:translate 8.5 "
 #"10.5 #(struct:text \"m\" 0 1 \"green\" 20 #f swiss normal normal #f)"
 #")))) #(struct:translate 108.0 0.0 #(struct:translate 5.5 10.5 #(stru"
 #"ct:text \"a\" 0 1 \"green\" 20 #f swiss normal normal #f))))) #(stru"
 #"ct:translate 119.0 0.0 #(struct:translate 5.5 10.5 #(struct:text \"n"
 #"\" 0 1 \"green\" 20 #f swiss normal normal #f))))) #(struct:translat"
 #"e 130.0 0.0 #(struct:translate 5.5 10.5 #(struct:text \"o\" 0 1 \"gr"
 #"een\" 20 #f swiss normal normal #f))))) #(struct:translate 141.0 0.0"
 #" #(struct:translate 5.0 10.5 #(struct:text \"s\" 0 1 \"green\" 20 #f"
 #" swiss normal normal #f))))) #(struct:translate 0 22 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 7.5 "
 #"9.5 #(struct:text \"M\" 0 1 \"green\" 18 #f swiss normal normal #f))"
 #") #(struct:translate 15.0 0.0 #(struct:translate 5.0 9.5 #(struct:te"
 #"xt \"e\" 0 1 \"green\" 18 #f swiss normal normal #f))))) #(struct:tr"
 #"anslate 25.0 0.0 #(struct:translate 7.5 9.5 #(struct:text \"m\" 0 1 "
 #"\"green\" 18 #f swiss normal normal #f))))) #(struct:translate 40.0 "
 #"0.0 #(struct:translate 5.0 9.5 #(struct:text \"b\" 0 1 \"green\" 18 "
 #"#f swiss normal normal #f))))) #(struct:translate 50.0 0.0 #(struct:"
 #"translate 5.0 9.5 #(struct:text \"e\" 0 1 \"green\" 18 #f swiss norm"
 #"al normal #f))))) #(struct:translate 60.0 0.0 #(struct:translate 3.0"
 #" 9.5 #(struct:text \"r\" 0 1 \"green\" 18 #f swiss normal normal #f)"
 #")))) #(struct:translate 66.0 0.0 #(struct:translate 4.5 9.5 #(struct"
 #":text \"s\" 0 1 \"green\" 18 #f swiss normal normal #f))))) #(struct"
 #":translate 75.0 0.0 #(struct:translate 2.5 9.5 #(struct:text \":\" 0"
 #" 1 \"green\" 18 #f swiss normal normal #f))))) #(struct:translate 80"
 #".0 0.0 #(struct:translate 2.5 9.5 #(struct:text \" \" 0 1 \"green\" "
 #"18 #f swiss normal normal #f))))) #(struct:translate 85.0 0.0 #(stru"
 #"ct:translate 5.0 9.5 #(struct:text \"2\" 0 1 \"green\" 18 #f swiss n"
 #"ormal normal #f))))) #(struct:translate 0 20 #(struct:overlay #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:ov"
 #"erlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0"
 #" #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transl"
 #"ate 6.0 9.5 #(struct:text \"S\" 0 1 \"green\" 18 #f swiss normal nor"
 #"mal #f))) #(struct:translate 12.0 0.0 #(struct:translate 4.5 9.5 #(s"
 #"truct:text \"c\" 0 1 \"green\" 18 #f swiss normal normal #f))))) #(s"
 #"truct:translate 21.0 0.0 #(struct:translate 5.0 9.5 #(struct:text \""
 #"o\" 0 1 \"green\" 18 #f swiss normal normal #f))))) #(struct:transla"
 #"te 31.0 0.0 #(struct:translate 3.0 9.5 #(struct:text \"r\" 0 1 \"gre"
 #"en\" 18 #f swiss normal normal #f))))) #(struct:translate 37.0 0.0 #"
 #"(struct:translate 5.0 9.5 #(struct:text \"e\" 0 1 \"green\" 18 #f sw"
 #"iss normal normal #f))))) #(struct:translate 47.0 0.0 #(struct:trans"
 #"late 2.5 9.5 #(struct:text \":\" 0 1 \"green\" 18 #f swiss normal no"
 #"rmal #f))))) #(struct:translate 52.0 0.0 #(struct:translate 2.5 9.5 "
 #"#(struct:text \" \" 0 1 \"green\" 18 #f swiss normal normal #f))))) "
 #"#(struct:translate 57.0 0.0 #(struct:overlay #(struct:translate 0 0 "
 #"#(struct:overlay #(struct:translate 0 0 #(struct:translate 5.0 9.5 #"
 #"(struct:text \"1\" 0 1 \"green\" 18 #f swiss normal normal #f))) #(s"
 #"truct:translate 10.0 0.0 #(struct:translate 5.0 9.5 #(struct:text \""
 #"0\" 0 1 \"green\" 18 #f swiss normal normal #f))))) #(struct:transla"
 #"te 20.0 0.0 #(struct:translate 5.0 9.5 #(struct:text \"0\" 0 1 \"gre"
 #"en\" 18 #f swiss normal normal #f))))))))))) #(struct:translate 0 62"
 #" #(struct:translate 31.3203125 0.0 #(struct:overlay #(struct:curve-s"
 #"egment #(struct:point 2 30) 5 -5 #(struct:point 2 45) 0 -1/10 solid "
 #"\"red\") #(struct:overlay #(struct:translate 0 8 #(struct:overlay #("
 #"struct:translate 10 15 #(struct:overlay #(struct:translate 3 3 #(str"
 #"uct:translate 5 5 #(struct:ellipse 10 10 0 255 \"black\"))) #(struct"
 #":translate 0 0 #(struct:translate "
 #"8 8 #(struct:ellipse 16 16 0 255 \"white\"))))) #(struct:translate 0"
 #" 0 #(struct:translate 30 30 #(struct:ellipse 60 60 0 255 \"yellow\")"
 #")))) #(struct:translate 8 0 #(struct:translate 22.360679774997905 61"
 #".55367074350507 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 42.36067977499789 -30.776835371752533 0 0"
 #") #(struct:pulled-point 0 0 0.0 -61.55367074350507 0 0) #(struct:pul"
 #"led-point 0 0 -16.18033988749896 -11.75570504584947 0 0) #(struct:pu"
 #"lled-point 0 0 36.180339887498945 -11.755705045849464 0 0) #(struct:"
 #"pulled-point 0 0 20.0 -61.55367074350507 0 0) #(struct:pulled-point "
 #"0 0 -22.360679774997905 -30.776835371752544 0 0) #(struct:pulled-poi"
 #"nt 0 0 20 0 0 0) #(struct:pulled-point 0 0 36.180339887498945 -49.79"
 #"7965697655606 0 0) #(struct:pulled-point 0 0 -16.180339887498953 -49"
 #".79796569765561 0 0)) 255 \"red\")))))))) #(struct:bb 151.0 130.0 13"
 #"0.0) #f)"
) 0 0 25 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 13 #"mostra-equipe"
0 0 17 3 1 #" "
0 0 17 3 11 #"EQUIPE3) = "
0 6           4 17 5158
(47
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:translate 6.5 10.5 #(struct:text \"V\" 0 1 \"green\" 20 #f swiss n"
 #"ormal normal #f))) #(struct:translate 13.0 0.0 #(struct:translate 2."
 #"0 10.5 #(struct:text \"i\" 0 1 \"green\" 20 #f swiss normal normal #"
 #"f))))) #(struct:translate 17.0 0.0 #(struct:translate 5.5 10.5 #(str"
 #"uct:text \"g\" 0 1 \"green\" 20 #f swiss normal normal #f))))) #(str"
 #"uct:translate 28.0 0.0 #(struct:translate 2.0 10.5 #(struct:text \"i"
 #"\" 0 1 \"green\" 20 #f swiss normal normal #f))))) #(struct:translat"
 #"e 32.0 0.0 #(struct:translate 2.0 10.5 #(struct:text \"l\" 0 1 \"gre"
 #"en\" 20 #f swiss normal normal #f))))) #(struct:translate 36.0 0.0 #"
 #"(struct:translate 5.5 10.5 #(struct:text \"a\" 0 1 \"green\" 20 #f s"
 #"wiss normal normal #f))))) #(struct:translate 47.0 0.0 #(struct:tran"
 #"slate 5.5 10.5 #(struct:text \"n\" 0 1 \"green\" 20 #f swiss normal "
 #"normal #f))))) #(struct:translate 58.0 0.0 #(struct:translate 3.0 10"
 #".5 #(struct:text \"t\" 0 1 \"green\" 20 #f swiss normal normal #f)))"
 #")) #(struct:translate 64.0 0.0 #(struct:translate 5.0 10.5 #(struct:"
 #"text \"s\" 0 1 \"green\" 20 #f swiss normal normal #f))))) #(struct:"
 #"translate 0 22 #(struct:overlay #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:translate 7.5 9.5 #(struct:text \"M\" 0 1 \"green\" "
 #"18 #f swiss normal normal #f))) #(struct:translate 15.0 0.0 #(struct"
 #":translate 5.0 9.5 #(struct:text \"e\" 0 1 \"green\" 18 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 25.0 0.0 #(struct:translate 7."
 #"5 9.5 #(struct:text \"m\" 0 1 \"green\" 18 #f swiss normal normal #f"
 #"))))) #(struct:translate 40.0 0.0 #(struct:translate 5.0 9.5 #(struc"
 #"t:text \"b\" 0 1 \"green\" 18 #f swiss normal normal #f))))) #(struc"
 #"t:translate 50.0 0.0 #(struct:translate 5.0 9.5 #(struct:text \"e\" "
 #"0 1 \"green\" 18 #f swiss normal normal #f))))) #(struct:translate 6"
 #"0.0 0.0 #(struct:translate 3.0 9.5 #(struct:text \"r\" 0 1 \"green\""
 #" 18 #f swiss normal normal #f))))) #(struct:translate 66.0 0.0 #(str"
 #"uct:translate 4.5 9.5 #(struct:text \"s\" 0 1 \"green\" 18 #f swiss "
 #"normal normal #f))))) #(struct:translate 75.0 0.0 #(struct:translate"
 #" 2.5 9.5 #(struct:text \":\" 0 1 \"green\" 18 #f swiss normal normal"
 #" #f))))) #(struct:translate 80.0 0.0 #(struct:translate 2.5 9.5 #(st"
 #"ruct:text \" \" 0 1 \"green\" 18 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 85.0 0.0 #(struct:translate 5.0 9.5 #(struct:text \"3"
 #"\" 0 1 \"green\" 18 #f swiss normal normal #f))))) #(struct:translat"
 #"e 0 20 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 0 0 #(struct:translate 6.0 9.5 #(struct:text \"S\" 0 1 \""
 #"green\" 18 #f swiss normal normal #f))) #(struct:translate 12.0 0.0 "
 #"#(struct:translate 4.5 9.5 #(struct:text \"c\" 0 1 \"green\" 18 #f s"
 #"wiss normal normal #f))))) #(struct:translate 21.0 0.0 #(struct:tran"
 #"slate 5.0 9.5 #(struct:text \"o\" 0 1 \"green\" 18 #f swiss normal n"
 #"ormal #f))))) #(struct:translate 31.0 0.0 #(struct:translate 3.0 9.5"
 #" #(struct:text \"r\" 0 1 \"green\" 18 #f swiss normal normal #f)))))"
 #" #(struct:translate 37.0 0.0 #(struct:translate 5.0 9.5 #(struct:tex"
 #"t \"e\" 0 1 \"green\" 18 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 47.0 0.0 #(struct:translat"
 #"e 2.5 9.5 #(struct:text \":\" 0 1 \"green\" 18 #f swiss normal norma"
 #"l #f))))) #(struct:translate 52.0 0.0 #(struct:translate 2.5 9.5 #(s"
 #"truct:text \" \" 0 1 \"green\" 18 #f swiss normal normal #f))))) #(s"
 #"truct:translate 57.0 0.0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:translate 5.0 9.5 #(struct:text \"9\" 0 1 \"green\" 18 #f swis"
 #"s normal normal #f))) #(struct:translate 10.0 0.0 #(struct:translate"
 #" 5.0 9.5 #(struct:text \"8\" 0 1 \"green\" 18 #f swiss normal normal"
 #" #f))))))))))) #(struct:translate 0 62 #(struct:overlay #(struct:ove"
 #"rlay #(struct:overlay #(struct:overlay #(struct:overlay #(struct:ove"
 #"rlay #(struct:overlay #(struct:translate 224/5 224/5 #(struct:ellips"
 #"e 24/5 24/5 0 255 \"white\")) #(struct:translate 132/5 92/5 #(struct"
 #":ellipse 16 16 0 255 \"white\"))) #(struct:translate 36 36 #(struct:"
 #"ellipse 128/5 128/5 0 outline \"brown\"))) #(struct:translate 36 36 "
 #"#(struct:ellipse 32 32 0 255 \"black\"))) #(struct:translate 36 36 #"
 #"(struct:ellipse 48 48 0 255 \"cyan\"))) #(struct:translate 36 36 #(s"
 #"truct:ellipse 256/5 256/5 0 255 \"seagreen\"))) #(struct:translate 3"
 #"6 36 #(struct:ellipse 72 72 0 255 \"white\"))) #(struct:translate 36"
 #" 36 #(struct:ellipse 72 72 0 outline \"black\"))))) #(struct:bb 95.0"
 #" 134.0 134.0) #f)"
) 0 0 25 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #"("
0 0 17 3 13 #"mostra-equipe"
0 0 17 3 1 #" "
0 0 17 3 11 #"EQUIPE4) = "
0 6           4 17 8565
(48
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overla"
 #"y #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struc"
 #"t:translate 6.5 10.5 #(struct:text \"S\" 0 1 \"green\" 20 #f swiss n"
 #"ormal normal #f))) #(struct:translate 13.0 0.0 #(struct:translate 5."
 #"5 10.5 #(struct:text \"a\" 0 1 \"green\" 20 #f swiss normal normal #"
 #"f))))) #(struct:translate 24.0 0.0 #(struct:translate 2.0 10.5 #(str"
 #"uct:text \"i\" 0 1 \"green\" 20 #f swiss normal normal #f))))) #(str"
 #"uct:translate 28.0 0.0 #(struct:translate 5.0 10.5 #(struct:text \"y"
 #"\" 0 1 \"green\" 20 #f swiss normal normal #f))))) #(struct:translat"
 #"e 38.0 0.0 #(struct:translate 5.5 10.5 #(struct:text \"a\" 0 1 \"gre"
 #"en\" 20 #f swiss normal normal #f))))) #(struct:translate 49.0 0.0 #"
 #"(struct:translate 2.0 10.5 #(struct:text \"j\" 0 1 \"green\" 20 #f s"
 #"wiss normal normal #f))))) #(struct:translate 53.0 0.0 #(struct:tran"
 #"slate 2.0 10.5 #(struct:text \"i\" 0 1 \"green\" 20 #f swiss normal "
 #"normal #f))))) #(struct:translate 57.0 0.0 #(struct:translate 5.5 10"
 #".5 #(struct:text \"n\" 0 1 \"green\" 20 #f swiss normal normal #f)))"
 #")) #(struct:translate 68.0 0.0 #(struct:translate 5.0 10.5 #(struct:"
 #"text \"s\" 0 1 \"green\" 20 #f swiss normal normal #f))))) #(struct:"
 #"translate 0 22 #(struct:overlay #(struct:translate 0 0 #(struct:over"
 #"lay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #"
 #"(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay "
 #"#(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:translate 7.5 9.5 #(struct:text \"M\" 0 1 \"green\" "
 #"18 #f swiss normal normal #f))) #(struct:translate 15.0 0.0 #(struct"
 #":translate 5.0 9.5 #(struct:text \"e\" 0 1 \"green\" 18 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 25.0 0.0 #(struct:translate 7."
 #"5 9.5 #(struct:text \"m\" 0 1 \"green\" 18 #f swiss normal normal #f"
 #"))))) #(struct:translate 40.0 0.0 #(struct:translate 5.0 9.5 #(struc"
 #"t:text \"b\" 0 1 \"green\" 18 #f swiss normal normal #f))))) #(struc"
 #"t:translate 50.0 0.0 #(struct:translate 5.0 9.5 #(struct:text \"e\" "
 #"0 1 \"green\" 18 #f swiss normal normal #f))))) #(struct:translate 6"
 #"0.0 0.0 #(struct:translate 3.0 9.5 #(struct:text \"r\" 0 1 \"green\""
 #" 18 #f swiss normal normal #f))))) #(struct:translate 66.0 0.0 #(str"
 #"uct:translate 4.5 9.5 #(struct:text \"s\" 0 1 \"green\" 18 #f swiss "
 #"normal normal #f))))) #(struct:translate 75.0 0.0 #(struct:translate"
 #" 2.5 9.5 #(struct:text \":\" 0 1 \"green\" 18 #f swiss normal normal"
 #" #f))))) #(struct:translate 80.0 0.0 #(struct:translate 2.5 9.5 #(st"
 #"ruct:text \" \" 0 1 \"green\" 18 #f swiss normal normal #f))))) #(st"
 #"ruct:translate 85.0 0.0 #(struct:translate 5.0 9.5 #(struct:text \"5"
 #"\" 0 1 \"green\" 18 #f swiss normal normal #f))))) #(struct:translat"
 #"e 0 20 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0"
 #" 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 0 0 #(struct:translate 6.0 9.5 #(struct:text \"S\" 0 1 \""
 #"green\" 18 #f swiss normal normal #f))) #(struct:translate 12.0 0.0 "
 #"#(struct:translate 4.5 9.5 #(struct:text \"c\" 0 1 \"green\" 18 #f s"
 #"wiss normal normal #f))))) #(struct:translate 21.0 0.0 #(struct:tran"
 #"slate 5.0 9.5 #(struct:text \"o\" 0 1 \"green\" 18 #f swiss normal n"
 #"ormal #f))))) #(struct:translate 31.0 0.0 #(struct:translate 3.0 9.5"
 #" #(struct:text \"r\" 0 1 \"green\" 18 #f swiss normal normal #f)))))"
 #" #(struct:translate 37.0 0.0 #(struct:translate 5.0 9.5 #(struct:tex"
 #"t \"e\" 0 1 \"green\" 18 #f swiss normal normal #f))))) #(struct:tra"
 #"nslate 47.0 0.0 #(struct:translat"
 #"e 2.5 9.5 #(struct:text \":\" 0 1 \"green\" 18 #f swiss normal norma"
 #"l #f))))) #(struct:translate 52.0 0.0 #(struct:translate 2.5 9.5 #(s"
 #"truct:text \" \" 0 1 \"green\" 18 #f swiss normal normal #f))))) #(s"
 #"truct:translate 57.0 0.0 #(struct:overlay #(struct:translate 0 0 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate "
 #"5.0 9.5 #(struct:text \"1\" 0 1 \"green\" 18 #f swiss normal normal "
 #"#f))) #(struct:translate 10.0 0.0 #(struct:translate 5.0 9.5 #(struc"
 #"t:text \"0\" 0 1 \"green\" 18 #f swiss normal normal #f))))) #(struc"
 #"t:translate 20.0 0.0 #(struct:translate 5.0 9.5 #(struct:text \"0\" "
 #"0 1 \"green\" 18 #f swiss normal normal #f))))) #(struct:translate 3"
 #"0.0 0.0 #(struct:translate 5.0 9.5 #(struct:text \"0\" 0 1 \"green\""
 #" 18 #f swiss normal normal #f))))) #(struct:translate 40.0 0.0 #(str"
 #"uct:translate 5.0 9.5 #(struct:text \"0\" 0 1 \"green\" 18 #f swiss "
 #"normal normal #f))))))))))) #(struct:translate 0 62 #(struct:overlay"
 #" #(struct:translate 0 0 #(struct:translate 24 64 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 12/5 0 0 0) #(struct:pulled-point 0 0 0 8 0"
 #" 0) #(struct:pulled-point 0 0 44/5 32 0 0) #(struct:pulled-point 0 0"
 #" 12 12 0 0) #(struct:pulled-point 0 0 16 36/5 0 0) #(struct:pulled-p"
 #"oint 0 0 56/5 12 0 0) #(struct:pulled-point 0 0 16 40 0 0) #(struct:"
 #"pulled-point 0 0 96/5 24 0 0) #(struct:pulled-point 0 0 32 12 0 0) #"
 #"(struct:pulled-point 0 0 236/5 24 0 0) #(struct:pulled-point 0 0 48 "
 #"40 0 0) #(struct:pulled-point 0 0 276/5 24 0 0) #(struct:pulled-poin"
 #"t 0 0 56 12 0 0) #(struct:pulled-point 0 0 292/5 16 0 0) #(struct:pu"
 #"lled-point 0 0 56 28 0 0) #(struct:pulled-point 0 0 60 172/5 0 0) #("
 #"struct:pulled-point 0 0 292/5 28 0 0) #(struct:pulled-point 0 0 72 1"
 #"2 0 0) #(struct:pulled-point 0 0 68 16 0 0) #(struct:pulled-point 0 "
 #"0 80 24 0 0) #(struct:pulled-point 0 0 76 56/5 0 0) #(struct:pulled-"
 #"point 0 0 96 16 0 0) #(struct:pulled-point 0 0 80 0 0 0) #(struct:pu"
 #"lled-point 0 0 96 -8 0 0) #(struct:pulled-point 0 0 80 -4 0 0) #(str"
 #"uct:pulled-point 0 0 76 -24 0 0) #(struct:pulled-point 0 0 64 -16 0 "
 #"0) #(struct:pulled-point 0 0 40 -64 0 0) #(struct:pulled-point 0 0 2"
 #"4 -24 0 0) #(struct:pulled-point 0 0 8 -32 0 0) #(struct:pulled-poin"
 #"t 0 0 8 -12 0 0) #(struct:pulled-point 0 0 0 -12 0 0) #(struct:pulle"
 #"d-point 0 0 -24 -4 0 0) #(struct:pulled-point 0 0 0 24 0 0)) 255 \"y"
 #"ellow\"))) #(struct:translate 24 68 #(struct:overlay #(struct:transl"
 #"ate 212/5 16 #(struct:overlay #(struct:translate 0 0 #(struct:transl"
 #"ate 28 -8 #(struct:polygon (#(struct:pulled-point 0 0 -4 8 0 0) #(st"
 #"ruct:pulled-point 0 0 -12 12 0 0) #(struct:pulled-point 0 0 -28 24 0"
 #" 0) #(struct:pulled-point 0 0 -12 16 0 0) #(struct:pulled-point 0 0 "
 #"-32/5 16 0 0)) 255 \"black\"))) #(struct:translate 8/5 8 #(struct:ov"
 #"erlay #(struct:translate 8/5 4 #(struct:translate 2 16/5 #(struct:el"
 #"lipse 4 32/5 0 255 \"black\"))) #(struct:translate 0 0 #(struct:tran"
 #"slate 24 -16 #(struct:polygon (#(struct:pulled-point 0 0 -48/5 16 0 "
 #"0) #(struct:pulled-point 0 0 -24 112/5 0 0) #(struct:pulled-point 0 "
 #"0 -112/5 28 0 0) #(struct:pulled-point 0 0 -12 132/5 0 0)) 255 \"whi"
 #"te\"))))))) #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 64/5 16 #(struct:overlay #(struct:translate 0 0 #(struct:translat"
 #"e -4 -8 #(struct:polygon (#(struct:pulled-point 0 0 4 8 0 0) #(struc"
 #"t:pulled-point 0 0 12 12 0 0) #(struct:pulled-point 0 0 28 24 0 0) #"
 #"(struct:pulled-point 0 0 12 16 0 0) #(struct:pulled-point 0 0 32/5 1"
 #"6 0 0)) 255 \"black\"))) #(struct:translate 8 8 #(struct:overlay #(s"
 #"truct:translate 44/5 4 #(struct:translate 2 16/5 #(struct:ellipse 4 "
 #"32/5 0 255 \"black\"))) #(struct:translate 0 0 #(struct:translate -4"
 #"8/5 -16 #(struct:polygon (#(struct:pulled-point 0 0 48/5 16 0 0) #(s"
 #"truct:pulled-point 0 0 24 112/5 0 0) #(struct:pulled-point 0 0 112/5"
 #" 28 0 0) #(struct:pulled-point 0 0 12 132/5 0 0)) 255 \"white\")))))"
 #")) #(struct:translate 0 0 #(struct:overlay #(struct:translate 40 36 "
 #"#(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0"
 #" 0 0 0) #(struct:pulled-point 0 0 12/5 24/5 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 32/5 0 0)) 255 \"brown\"))) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 188/5 44 #(struct:translate 0 0 #(struct"
 #":polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0"
 #" 0 8 0 0 0) #(struct:pulled-point 0 0 0 4/5 0 0)) 255 \"black\"))) #"
 #"(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 80 0 0 0) #("
 #"struct:pulled-point 0 0 64 40 0 0) #(struct:pulled-point 0 0 40 56 0"
 #" 0) #(struct:pulled-point 0 0 16 40 0 0)) 255 \"burlywood\")))))))))"
 #"))))) #(struct:bb 120.0 186.0 186.0) #f)"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 58
#";Mais uma vez, a checagem de expectativa n\303\243o faz sentido."
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"mostra-equipe"
0 0 25 3 1 #" "
0 0 14 3 6 #"equipe"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 10 #"overlay/xy"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 10 #"overlay/xy"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 4 #"text"
0 0 25 3 2 #" ("
0 0 14 3 11 #"equipe-nome"
0 0 25 3 1 #" "
0 0 14 3 6 #"equipe"
0 0 25 3 2 #") "
0 0 22 3 2 #"20"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"22"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"overlay/xy"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 6 #"beside"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 4 #"text"
0 0 25 3 1 #" "
0 0 19 3 11 #"\"Members: \""
0 0 25 3 1 #" "
0 0 22 3 2 #"18"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 4 #"text"
0 0 25 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 25 3 2 #" ("
0 0 14 3 14 #"equipe-tamanho"
0 0 25 3 1 #" "
0 0 14 3 6 #"equipe"
0 0 25 3 3 #")) "
0 0 22 3 2 #"18"
0 0 25 11 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 3 #")) "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"20"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 14 3 6 #"beside"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 4 #"text"
0 0 25 3 1 #" "
0 0 19 3 9 #"\"Score: \""
0 0 25 3 1 #" "
0 0 22 3 2 #"18"
0 0 25 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 18 #"                 ("
0 0 14 3 4 #"text"
0 0 25 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 25 3 2 #" ("
0 0 14 3 16 #"equipe-pontuacao"
0 0 25 3 1 #" "
0 0 14 3 6 #"equipe"
0 0 25 3 3 #")) "
0 0 22 3 2 #"18"
0 0 25 11 1 #" "
0 0 19 3 7 #"\"green\""
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"     ))  "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 2 #"62"
0 0 25 29 1 #"\n"
0 0 25 3 4 #"   ("
0 0 14 3 14 #"equipe-emblema"
0 0 25 3 1 #" "
0 0 14 3 6 #"equipe"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0           0
