#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 8.0 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 34 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mrl"
 #"ib\"))\x00"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 79
(1
 #"((lib \"srcloc-snip.rkt\" \"framework\") (lib \"wxme-srcloc-snip.rkt"
 #"\" \"framework\"))\x00"
) 1 0 93
(2
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-snip"
 #"class-wxme.ss\" \"framework\"))\x00"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(3
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsis"
 #"-snip-wxme.rkt\" \"drracket\" \"private\"))\x00"
) 2 0 88
(4
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.rk"
 #"t\" \"drracket\" \"private\"))\x00"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 80 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 10 #"Monospace\0"
0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 36 36 140 255 255 255 -1
-1 0 42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 34 139 34 255 255 255 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 36 36 140
255 255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 34 139 34
255 255 255 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0 10 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0 10 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 152 251 152
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1           0 1954 0 4 3 85
(5
 #";; The first three lines of this file were inserted by DrRacket. They"
 #" record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(6
 #";; about the language level of this file in a form that our tools can"
 #" easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 199
(7
 #"#reader(lib \"htdp-intermediate-reader.ss\" \"lang\")((modname lista1"
 #"0-RafaelEberhardt-A) (read-case-sensitive #t) (teachpacks ()) (htdp-s"
 #"ettings #(#t constructor repeating-decimal #f #t none #f () #f)))"
) 0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";; Nome:"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; Turma:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; =============================================================="
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; =============================================================="
0 0 24 29 1 #"\n"
0 0 17 3 59
(8
 #";; Considere as defini\xC3\xA7\xC3\xB5es de dados e fun\xC3\xA7\xC3"
 #"\xB5es a seguir."
) 0 0 24 29 1 #"\n"
0 0 17 3 79
(9
 #";; Reescreva as fun\xC3\xA7\xC3\xB5es (A) a (E) usando as fun\xC3\xA7"
 #"\xC3\xB5es filter, map e/ou foldl."
) 0 0 24 29 1 #"\n"
0 0 17 3 66
(10
 #";; O c\xC3\xB3digo das novas fun\xC3\xA7\xC3\xB5es n\xC3\xA3o pode te"
 #"r condicional (cond)."
) 0 0 24 29 1 #"\n"
0 0 17 3 62
(11
 #";; Inclua pelo menos 2 testes para cada fun\xC3\xA7\xC3\xA3o de (A) a"
 #" (E)."
) 0 0 24 29 1 #"\n"
0 0 17 3 66
#";; ==============================================================="
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; ============================"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; DEFINI\303\207\303\225ES DE TIPOS DE DADOS"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; ============================"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";;      TIPO RETANGULO:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 9 #"retangulo"
0 0 24 3 2 #" ("
0 0 14 3 5 #"lado1"
0 0 24 3 1 #" "
0 0 14 3 5 #"lado2"
0 0 24 3 1 #" "
0 0 14 3 3 #"cor"
0 0 24 3 1 #" "
0 0 14 3 4 #"nome"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; Um elemento de Retangulo tem o formato"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";;        (make-retangulo    l1 l2 c n), onde"
0 0 24 29 1 #"\n"
0 0 17 3 52
(12
 #";;          l1: N\xC3\xBAmero, \xC3\xA9 a largura do ret\xC3\xA2ngulo"
 #";"
) 0 0 24 29 1 #"\n"
0 0 17 3 51
(13
 #";;          l2: N\xC3\xBAmero, \xC3\xA9 a altura do ret\xC3\xA2ngulo;"
) 0 0 24 29 1 #"\n"
0 0 17 3 47
#";;          c : String, \303\251 a cor do ret\303\242ngulo;"
0 0 24 29 1 #"\n"
0 0 17 3 48
#";;          n : String, \303\251 o nome do ret\303\242ngulo."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"R1"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-retangulo"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"R1\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"R2"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-retangulo"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"R2\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";;      TIPO TRIANGULO:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 9 #"triangulo"
0 0 24 3 2 #" ("
0 0 14 3 4 #"lado"
0 0 24 3 1 #" "
0 0 14 3 3 #"cor"
0 0 24 3 1 #" "
0 0 14 3 4 #"nome"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; Um elemento de Triangulo tem o formato"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";;        (make-triangulo    l c n), onde"
0 0 24 29 1 #"\n"
0 0 17 3 48
#";;          l: N\303\272mero, \303\251 o lado do tri\303\242ngulo;"
0 0 24 29 1 #"\n"
0 0 17 3 47
#";;          c : String, \303\251 a cor do tri\303\242ngulo;"
0 0 24 29 1 #"\n"
0 0 17 3 48
#";;          n : String, \303\251 o nome do tri\303\242ngulo."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"T1"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-triangulo"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 4 #"    "
0 0 19 3 6 #"\"blue\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"T1\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"T2"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-triangulo"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 4 #"    "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"T2\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";;      TIPO ELIPSE:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"elipse"
0 0 24 3 2 #" ("
0 0 14 3 7 #"largura"
0 0 24 3 1 #" "
0 0 14 3 6 #"altura"
0 0 24 3 1 #" "
0 0 14 3 3 #"cor"
0 0 24 3 1 #" "
0 0 14 3 4 #"nome"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; Um elemento de Elipse tem o formato"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";;        (make-elipse    l a c n), onde"
0 0 24 29 1 #"\n"
0 0 17 3 47
#";;          l: N\303\272mero, \303\251 a largura da elipse;"
0 0 24 29 1 #"\n"
0 0 17 3 46
#";;          a: N\303\272mero, \303\251 a altura da elipse;"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";;          c : String, \303\251 a cor da elipse;"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";;          n : String, \303\251 o nome da elipse."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"E1"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-elipse"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"E1\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"E2"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-elipse"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"E2\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; Uma Forma pode ser"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 22 #";; 1. um Retangulo, ou"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 22 #";; 2. um Triangulo, ou"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 16 #";; 3. uma Elipse"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 17 3 21 #";; Uma ListaFormas \303\251"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 23 #";; 1. vazia (empty), ou"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 23 #";; 2. (cons f lf), onde"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 21 #";;          f : Forma"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 27 #";;          lf: ListaFormas"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"L1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"E1"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"L2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"E1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"E2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"T1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"T2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"R1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"R2"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"L3"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"T1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"T1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"T1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"T2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"R1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"R1"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"L4"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"E2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"E2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"E2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"T2"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; ====================="
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; DEFINI\303\207\303\225ES DE FUN\303\207\303\225ES"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; ====================="
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; desenha : Forma -> Imagem"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; Dada uma forma, gera uma imagem desta forma."
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Exemplos:"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; (desenha E1) = ."
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; (desenha (T2) = ."
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"desenha"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 70
(14
 #";; se a forma f for um ret\xC3\xA2ngulo, desenha o ret\xC3\xA2ngulo c"
 #"orrespondente"
) 0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 10 #"retangulo?"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #") ("
0 0 14 3 9 #"rectangle"
0 0 24 3 2 #" ("
0 0 14 3 15 #"retangulo-lado1"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #") ("
0 0 14 3 15 #"retangulo-lado2"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 11 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 2 #" ("
0 0 14 3 13 #"retangulo-cor"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 70
(15
 #";; se a forma f for um tri\xC3\xA2ngulo, desenha o tri\xC3\xA2ngulo c"
 #"orrespondente"
) 0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 10 #"triangulo?"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #") ("
0 0 14 3 8 #"triangle"
0 0 24 3 5 #"    ("
0 0 14 3 14 #"triangulo-lado"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 5 #")    "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #"("
0 0 14 3 13 #"triangulo-cor"
0 0 24 11 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 62
#";; se a forma f for uma elipse, desena a elipse correspondente"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 7 #"elipse?"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 10 #")        ("
0 0 14 3 7 #"ellipse"
0 0 24 3 7 #"      ("
0 0 14 3 14 #"elipse-largura"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 6 #")    ("
0 0 14 3 13 #"elipse-altura"
0 0 24 11 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 2 #") "
0 0 19 3 7 #"\"solid\""
0 0 24 3 2 #" ("
0 0 14 3 10 #"elipse-cor"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; Testes:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"desenha"
0 0 24 3 1 #" "
0 0 14 3 2 #"E1"
0 0 24 3 3 #") ("
0 0 14 3 7 #"ellipse"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"desenha"
0 0 24 3 1 #" "
0 0 14 3 2 #"T2"
0 0 24 3 3 #") ("
0 0 14 3 8 #"triangle"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; (A) lista-elipses"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; lista-elipses : ListaFormas -> ListaFormas"
0 0 24 29 1 #"\n"
0 0 17 3 72
(16
 #";; Obj: Dada uma lista de formas, devolve uma lista com todas as elip"
 #"ses"
) 0 0 24 29 1 #"\n"
0 0 17 3 32 #";;            da lista original."
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Exemplos:"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;    (lista-elipses L3) =    empty"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";;    (lista-elipses L2) = (cons E1 (cons E2 empty))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"lista-elipses"
0 0 24 3 1 #" "
0 0 14 3 2 #"lf"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"filter"
0 0 24 3 1 #" "
0 0 14 3 7 #"elipse?"
0 0 24 3 1 #" "
0 0 14 3 2 #"lf"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #"; Testes:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"lista-elipses"
0 0 24 3 1 #" "
0 0 14 3 2 #"L2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-elipse"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"E1\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 11 #"make-elipse"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"E2\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"lista-elipses"
0 0 24 3 1 #" "
0 0 14 3 2 #"L3"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; (B) lista-nomes-elipses"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; lista-nomes-elipses : ListaFormas -> ListaString"
0 0 24 29 1 #"\n"
0 0 17 3 84
(17
 #";; Obj: Dada uma lista de formas, devolve uma lista com os nomes de t"
 #"odas as elipses"
) 0 0 24 29 1 #"\n"
0 0 17 3 32 #";;            da lista original."
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Exemplos:"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";;    (lista-nomes-elipses L3) =    empty"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";;    (lista-nomes-elipses L2) = (cons \"E1\" (cons \"E2\" empty))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"lista-nomes-elipses"
0 0 24 3 1 #" "
0 0 14 3 2 #"lf"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 11 #"elipse-nome"
0 0 24 3 2 #" ("
0 0 14 3 13 #"lista-elipses"
0 0 24 3 1 #" "
0 0 14 3 2 #"lf"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; Testes:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"lista-nomes-elipses"
0 0 24 3 1 #" "
0 0 14 3 2 #"L2"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"E1\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"E2\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 19 #"lista-nomes-elipses"
0 0 24 3 1 #" "
0 0 14 3 2 #"L1"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"E1\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; (C) lista-elipses-img"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; lista-elipses-img : ListaFormas -> Imagem"
0 0 24 29 1 #"\n"
0 0 17 3 62
#";; Obj: Dada uma lista de formas, devolve uma imagem com todas"
0 0 24 29 1 #"\n"
0 0 17 3 70
(18
 #";;              as elipses da lista original, na ordem inversa na qua"
 #"l"
) 0 0 24 29 1 #"\n"
0 0 17 3 38 #";;              elas aparecem na lista"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; Exemplo: (lista-elipses-img L2) =."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"lista-elipses-img"
0 0 24 3 1 #" "
0 0 14 3 2 #"lf"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 5 #"foldl"
0 0 24 3 1 #" "
0 0 14 3 6 #"beside"
0 0 24 3 1 #" "
0 0 14 3 11 #"empty-image"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 7 #"desenha"
0 0 24 3 2 #" ("
0 0 14 3 13 #"lista-elipses"
0 0 24 3 1 #" "
0 0 14 3 2 #"lf"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";(desenha (first (lista-elipses lf)))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; Testes:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"lista-elipses-img"
0 0 24 3 1 #" "
0 0 14 3 2 #"L2"
0 0 24 3 3 #") ("
0 0 14 3 6 #"beside"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 7 #"desenha"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-elipse"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"E2\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 7 #"desenha"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-elipse"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"pink\""
0 0 24 3 1 #" "
0 0 19 3 4 #"\"E1\""
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 17 #"lista-elipses-img"
0 0 24 3 1 #" "
0 0 14 3 2 #"L3"
0 0 24 3 2 #") "
0 0 14 3 11 #"empty-image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; (D) soma-lados-triangulos"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; soma-lados-triangulos : ListaFormas -> Numero"
0 0 24 29 1 #"\n"
0 0 17 11 75
(19
 #";; Obj:Dada uma lista de formas, devolve a soma dos tamanhos dos lado"
 #"s dos "
) 0 0 17 3 20 #"triangulos da lista."
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; Exemplo: (soma-lados-triangulos L3) = 130"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"soma-lados-triangulos"
0 0 24 3 1 #" "
0 0 14 3 2 #"lf"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"foldl"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 14 #"triangulo-lado"
0 0 24 3 2 #" ("
0 0 14 3 6 #"filter"
0 0 24 3 1 #" "
0 0 14 3 10 #"triangulo?"
0 0 24 3 1 #" "
0 0 14 3 2 #"lf"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; Testes:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"soma-lados-triangulos"
0 0 24 3 1 #" "
0 0 14 3 2 #"L3"
0 0 24 3 2 #") "
0 0 21 3 3 #"130"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"soma-lados-triangulos"
0 0 24 3 1 #" "
0 0 14 3 2 #"L2"
0 0 24 3 2 #") "
0 0 21 3 2 #"70"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 21 #"soma-lados-triangulos"
0 0 24 3 1 #" "
0 0 14 3 2 #"L1"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; (E) desenha-lista-formas"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; desenha-lista-formas: ListaFormas -> Imagem"
0 0 24 29 1 #"\n"
0 0 17 3 83
(20
 #";; Obj: Dada uma lista de formas, monta uma imagem com todas as forma"
 #"s lado a lado,"
) 0 0 24 29 1 #"\n"
0 0 17 3 54 #";; na mesma ordem na qual as formas aparecem na lista."
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Exemplos:"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;    (desenha-lista-formas L2) = ."
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;    (desenha-lista-formas L3) = ."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"desenha-lista-formas"
0 0 24 3 1 #" "
0 0 14 3 2 #"lf"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"foldr"
0 0 24 3 1 #" "
0 0 14 3 6 #"beside"
0 0 24 3 1 #" "
0 0 14 3 11 #"empty-image"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 2 #"  "
0 0 14 3 7 #"desenha"
0 0 24 3 1 #" "
0 0 14 3 2 #"lf"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; Testes:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";;N\303\243o esquece de voltar aquiiiiiiii!!!!"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; =============================================================="
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; =============================================================="
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; (a) Defini\303\247\303\265es de dados:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";; TIPO ALUNO"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"aluno"
0 0 24 3 2 #" ("
0 0 14 3 4 #"nome"
0 0 24 3 1 #" "
0 0 14 3 5 #"turma"
0 0 24 3 1 #" "
0 0 14 3 2 #"P1"
0 0 24 3 1 #" "
0 0 14 3 2 #"P2"
0 0 24 3 1 #" "
0 0 14 3 8 #"trabalho"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";;Um elemento Aluno tem formato"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";;(make-aluno n t p1 p2 tr), onde"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; n: String, \303\251 o nome do aluno;"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; t: String, \303\251 sua turma"
0 0 24 29 1 #"\n"
0 0 17 3 46
#";; p1: N\303\272mero, \303\251 sua nota na primeira prova;"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; p2: N\303\272mero, \303\251 sua nota na segunda prova;"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; tr: N\303\272mero, \303\251 sua nota no trabalho"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";;Defini\303\247\303\265es de constantes do tipo Aluno"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"ALUNO1"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"ALUNO2"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"U\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"ALUNO3"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"U\""
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"ALUNO4"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"D\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"ALUNO5"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"E\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; TIPO LISTA-DE-ALUNOS"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; Um elemento Lista-de-Alunos \303\251"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; 1. vazio '(), ou"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; 2. (cons a la), onde:"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";;     a \303\251 um Aluno;"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";;     la \303\251 uma lista de alunos."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 54
#";;Defini\303\247\303\243o de uma constante do tipo Lista-de-Alunos"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"LA"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 6 #"ALUNO1"
0 0 24 3 1 #" "
0 0 14 3 6 #"ALUNO2"
0 0 24 3 1 #" "
0 0 14 3 6 #"ALUNO3"
0 0 24 3 1 #" "
0 0 14 3 6 #"ALUNO4"
0 0 24 3 1 #" "
0 0 14 3 6 #"ALUNO5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; =============================================================="
0 0 24 29 1 #"\n"
0 0 17 3 68
#";; (b) lista-alunos-turma: lista-de-alunos string -> lista-de-alunos"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";;Obj. "
0 0 17 11 72
(21
 #"dada a lista de alunos de um professor e uma turma,nesta ordem, devol"
 #"ve "
) 0 0 17 3 78
(22
 #"todos alunos daquela turma, na ordem na qual eles aparecem na lista d"
 #"e alunos."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";;Exemplo + teste:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"lista-alunos-turma"
0 0 24 3 1 #" "
0 0 14 3 2 #"LA"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"U\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"U\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"U\""
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"lista-alunos-turma"
0 0 24 3 1 #" "
0 0 14 3 2 #"LA"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"D\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 49 #"                                                ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"E\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"lista-alunos-turma"
0 0 24 3 1 #" "
0 0 14 3 2 #"la"
0 0 24 3 1 #" "
0 0 14 3 5 #"turma"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 2 #"la"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"()]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 8 #"string=?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"aluno-turma"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 2 #"la"
0 0 24 3 3 #")) "
0 0 14 3 5 #"turma"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 2 #"la"
0 0 24 3 3 #") ("
0 0 14 3 18 #"lista-alunos-turma"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 2 #"la"
0 0 24 3 2 #") "
0 0 14 3 5 #"turma"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 18 #"lista-alunos-turma"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 2 #"la"
0 0 24 3 2 #") "
0 0 14 3 5 #"turma"
0 0 24 3 6 #")])]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; =============================================================="
0 0 24 29 1 #"\n"
0 0 17 3 56 #";; (c) gera-conceitos: lista-de-alunos -> lista-de-pares"
0 0 24 29 1 #"\n"
0 0 17 11 84
(23
 #";;Obj.: dada a lista de alunos do professor, gera uma lista com os no"
 #"mes dos alunos "
) 0 0 17 11 84
(24
 #"e seus conceitos correspondentes: m\xC3\xA9dias entre 9 e 10 (inclusi"
 #"ve)geram conceito A, "
) 0 0 17 11 79
(25
 #"entre 7.5 (inclusive) e 9 (exclusive) geram conceito B, entre 6 (incl"
 #"usive ) e "
) 0 0 17 3 66
(26
 #"7.5(exclusive) geram conceito C, nos outros casos o conceito \xC3\xA9"
 #" D."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";;Exemplos + testes:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"gera-conceitos"
0 0 24 3 1 #" "
0 0 14 3 2 #"LA"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 8 #"make-par"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"A\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 8 #"make-par"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"U\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"D\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 8 #"make-par"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"U\""
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"D\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 8 #"make-par"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"D\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"A\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 8 #"make-par"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"E\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"D\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"gera-conceitos"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"Bla\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"E\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 14 3 2 #"LA"
0 0 24 3 3 #" ))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 8 #"make-par"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"Bla\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"E\""
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"D\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 8 #"make-par"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"A\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 8 #"make-par"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"U\""
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"D\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 8 #"make-par"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"U\""
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"D\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 8 #"make-par"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"D\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"A\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 8 #"make-par"
0 0 24 3 2 #" ("
0 0 14 3 10 #"make-aluno"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"E\""
0 0 24 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 19 3 3 #"\"D\""
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"gera-conceitos"
0 0 24 3 1 #" "
0 0 14 3 2 #"la"
0 0 24 3 3 #") ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 8 #"conceito"
0 0 24 3 1 #" "
0 0 14 3 2 #"la"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";;media-ar: aluno -> n\303\272mero"
0 0 24 29 1 #"\n"
0 0 17 3 66
(27
 #";;Obj.: Dado um aluno, retorna a m\xC3\xA9dia aritm\xC3\xA9tica de su"
 #"as notas."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";;Exemplos + testes:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"media-ar"
0 0 24 3 1 #" "
0 0 14 3 6 #"ALUNO1"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"media-ar"
0 0 24 3 1 #" "
0 0 14 3 6 #"ALUNO5"
0 0 24 3 2 #") "
0 0 21 3 4 #"17/3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"media-ar"
0 0 24 3 1 #" "
0 0 14 3 5 #"aluno"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 8 #"aluno-P1"
0 0 24 3 1 #" "
0 0 14 3 5 #"aluno"
0 0 24 3 3 #") ("
0 0 14 3 8 #"aluno-P2"
0 0 24 3 1 #" "
0 0 14 3 5 #"aluno"
0 0 24 3 3 #") ("
0 0 14 3 14 #"aluno-trabalho"
0 0 24 3 1 #" "
0 0 14 3 5 #"aluno"
0 0 24 3 3 #")) "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;conceito: aluno -> par"
0 0 24 29 1 #"\n"
0 0 17 3 69
(28
 #";;Obj.: Dado um aluno, retorna um par contendo o aluno e seu conceito"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";;Exemplos + testes:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"conceito"
0 0 24 3 1 #" "
0 0 14 3 6 #"ALUNO1"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-par"
0 0 24 3 1 #" "
0 0 14 3 6 #"ALUNO1"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"conceito"
0 0 24 3 1 #" "
0 0 14 3 6 #"ALUNO5"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-par"
0 0 24 3 1 #" "
0 0 14 3 6 #"ALUNO5"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"D\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"conceito"
0 0 24 3 1 #" "
0 0 14 3 5 #"aluno"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 8 #"media-ar"
0 0 24 3 1 #" "
0 0 14 3 5 #"aluno"
0 0 24 3 2 #") "
0 0 21 3 1 #"6"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-par"
0 0 24 3 1 #" "
0 0 14 3 5 #"aluno"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"D\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 8 #"media-ar"
0 0 24 3 1 #" "
0 0 14 3 5 #"aluno"
0 0 24 3 2 #") "
0 0 21 3 3 #"7.5"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-par"
0 0 24 3 1 #" "
0 0 14 3 5 #"aluno"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"C\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"          [("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 8 #"media-ar"
0 0 24 3 1 #" "
0 0 14 3 5 #"aluno"
0 0 24 3 2 #") "
0 0 21 3 1 #"9"
0 0 24 3 3 #") ("
0 0 14 3 8 #"make-par"
0 0 24 3 1 #" "
0 0 14 3 5 #"aluno"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"B\""
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 8 #"make-par"
0 0 24 3 1 #" "
0 0 14 3 5 #"aluno"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"A\""
0 0 24 3 8 #")])])]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;    TIPO PAR"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 3 #"par"
0 0 24 3 2 #" ("
0 0 14 3 5 #"aluno"
0 0 24 3 1 #" "
0 0 14 3 8 #"conceito"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";;Um elemento Par tem formato"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";;(make-par a c), onde"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; a: Aluno, \303\251 um aluno;"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; c: String, \303\251 seu conceito"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";;TIPO LISTA-DE-PARES"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; Um elemento Lista-de-Pares \303\251"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; 1. vazio '(), ou"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; 2. (cons p lp), onde:"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";;     p \303\251 um par;"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";;     lp \303\251 uma lista de pares."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; =============================================================="
0 0 24 29 1 #"\n"
0 0 17 3 86
(29
 #";; (d) gera-conceitos-gen: lista-de-alunos (media: aluno -> n\xC3\xBA"
 #"mero) -> lista-de-pares"
) 0 0 24 29 1 #"\n"
0 0 17 11 83
(30
 #";;Obj.: dada a lista de alunos e uma fun\xC3\xA7\xC3\xA3o que calcula"
 #" a m\xC3\xA9dia das notas de um "
) 0 0 17 3 82
(31
 #"aluno, retorna uma lista com os nomes dos alunos e seus conceitos cor"
 #"respondentes."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";;Exemplos + testes:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"gera-conceitos-gen"
0 0 24 3 1 #" "
0 0 14 3 2 #"LA"
0 0 24 3 1 #" "
0 0 14 3 8 #"media-ar"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 8          10 21 5 #"17/3\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"gera-conceitos-gen"
0 0 24 3 1 #" "
0 0 14 3 2 #"LA"
0 0 24 3 1 #" "
0 0 14 3 10 #"media-pond"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"gera-conceitos-gen"
0 0 24 3 1 #" "
0 0 14 3 2 #"LA"
0 0 24 3 1 #" "
0 0 14 3 10 #"media-harm"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 8          10 21 5 #"15/4\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"gera-conceitos-gen"
0 0 24 3 1 #" "
0 0 14 3 2 #"la"
0 0 24 3 1 #" "
0 0 14 3 5 #"media"
0 0 24 3 3 #") ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 5 #"media"
0 0 24 3 1 #" "
0 0 14 3 2 #"la"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";;Defini\303\247\303\243o de constantes"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"p3"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 11 84
(32
 #";;p1, p2 e p3 representam o peso das provas 1 e 2 e do trabalho aplic"
 #"ados sobre uma "
) 0 0 17 3 29 #"mesma turma, respectivamente."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";;media-pond: aluno -> n\303\272mero"
0 0 24 29 1 #"\n"
0 0 17 3 64
(33
 #";;Obj.: Dado um aluno, retorna a m\xC3\xA9dia ponderada de suas notas"
 #"."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";;Exemplos + testes:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"media-pond"
0 0 24 3 1 #" "
0 0 14 3 6 #"ALUNO1"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"media-pond"
0 0 24 3 1 #" "
0 0 14 3 6 #"ALUNO5"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 2 #"42"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"media-pond"
0 0 24 3 1 #" "
0 0 14 3 5 #"aluno"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 8 #"aluno-P1"
0 0 24 3 1 #" "
0 0 14 3 5 #"aluno"
0 0 24 3 2 #") "
0 0 14 3 2 #"p1"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 8 #"aluno-P2"
0 0 24 3 1 #" "
0 0 14 3 5 #"aluno"
0 0 24 3 2 #") "
0 0 14 3 2 #"p2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 14 #"aluno-trabalho"
0 0 24 3 1 #" "
0 0 14 3 5 #"aluno"
0 0 24 3 2 #") "
0 0 14 3 2 #"p3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 1 #" "
0 0 14 3 2 #"p3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";;media-harm: aluno -> n\303\272mero"
0 0 24 29 1 #"\n"
0 0 17 3 65
(34
 #";;Obj.: Dado um aluno, retorna a m\xC3\xA9dia harm\xC3\xB4nica de sua"
 #"s notas."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";;Exemplos + testes:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"media-harm"
0 0 24 3 1 #" "
0 0 14 3 6 #"ALUNO1"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"media-harm"
0 0 24 3 1 #" "
0 0 14 3 6 #"ALUNO5"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 5 #") )))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"media-harm"
0 0 24 3 1 #" "
0 0 14 3 5 #"aluno"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 8 #"aluno-P1"
0 0 24 3 1 #" "
0 0 14 3 5 #"aluno"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 8 #"aluno-P2"
0 0 24 3 1 #" "
0 0 14 3 5 #"aluno"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 14 #"aluno-trabalho"
0 0 24 3 1 #" "
0 0 14 3 5 #"aluno"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; =============================================================="
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; (e) ordena-turma:"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0           0
